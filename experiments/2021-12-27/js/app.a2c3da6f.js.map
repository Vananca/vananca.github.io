{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?db16","webpack:///./src/components/ExperimentWrapper.vue?aed3","webpack:///./src/App.vue?884c","webpack:///./src/components/ExperimentWrapper.vue?f363","webpack:///./src/shared/misc/global-renderer.ts","webpack:///./src/shared/common/action.ts","webpack:///./src/shared/size-system.ts","webpack:///./src/components/posteffects/shaders/compositing-pass.ts","webpack:///./src/components/posteffects/shaders/fxaa-pass.ts","webpack:///./src/components/posteffects/shaders/unreal-bloom-pass.ts","webpack:///./src/components/posteffects/shaders/zoom-blur-pass.ts","webpack:///./src/components/posteffects/posteffects-manager.ts","webpack:///./src/shared/assets-system.ts","webpack:///./src/shared/common/currency.ts","webpack:///./src/shared/common/denomination.ts","webpack:///./src/shared/common/coin-definitions.ts","webpack:///./src/shared/common/coin-factory.ts","webpack:///./src/components/materials/envmap_physical_pars_fragment.ts","webpack:///./src/components/materials/coin-material.ts","webpack:///./src/shared/sound-system.ts","webpack:///./src/shared/misc/query.ts","webpack:///./src/components/instanced-coins.ts","webpack:///./src/components/ExperimentWrapper.vue","webpack:///./src/components/ExperimentWrapper.vue?9c1a","webpack:///./src/components/ExperimentWrapper.vue?f102","webpack:///./src/App.vue","webpack:///./src/App.vue?198c","webpack:///./src/App.vue?315a","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","staticRenderFns","ref","el","document","createElement","style","position","top","left","width","height","canvas","antialias","alpha","stencil","preserveDrawingBuffer","powerPreference","autoClear","outputEncoding","info","autoReset","setClearColor","setClearAlpha","toneMapping","shadowMap","enabled","type","setPixelRatio","devicePixelRatio","addEventListener","e","preventDefault","Action","earlyDelegates","delegates","once","delegate","undefined","find","findIndex","forEach","onResize","isSSR","size","innerWidth","innerHeight","sizeRatio","resizeHandler","clearTimeout","setTimeout","invoke","uniforms","tPrev","texture","tDiffuse","tGlow","tBloom","bloomAmount","distortAmount","fadeAmount","invertAmount","resolution","time","fxAmount","vertexShader","fragmentShader","BlurDirectionX","BlurDirectionY","Pass","strength","radius","threshold","super","x","y","clearColor","pars","minFilter","magFilter","format","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","Math","round","resy","renderTargetBright","generateMipmaps","renderTargetHorizonal","renderTargetVertical","highPassShader","LuminosityHighPassShader","highPassUniforms","clone","materialHighPassFilter","defines","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","needsUpdate","bloomFactors","bloomTintColors","CopyShader","console","error","copyShader","copyUniforms","materialCopy","blending","depthTest","depthWrite","transparent","needsSwap","oldClearColor","oldClearAlpha","basic","fsQuad","dispose","setSize","renderer","writeBuffer","readBuffer","deltaTime","maskActive","getClearColor","getClearAlpha","oldAutoClear","state","buffers","setTest","material","setRenderTarget","clear","inputRenderTarget","kernelRadius","KERNEL_RADIUS","SIGMA","colorTexture","texSize","direction","NUM_MIPS","blurTexture1","blurTexture2","blurTexture3","blurTexture4","blurTexture5","dirtTexture","bloomStrength","bloomRadius","center","mix","blackMaterial","color","blackMaterialSkinned","stencilBuffer","encoding","EffectComposer","ShaderPass","RenderPass","addPass","renderTarget2","renderToScreen","setBloomAmount","scene","camera","children","traverse","obj","userData","isParticleSystem","enableBloom","hideFromBloom","includes","uuid","delta","updateBloomList","visibleStateBeforeBloom","visible","mesh","originalMaterial","mat","shader","isBloomRender","w","h","set","textureLoader","gltfLoader","GLTFLoader","exrLoader","EXRLoader","Map","onEnvMapUpdated","WeakMap","getRenderer","compileEquirectangularShader","allAssets","loadInitialManifest","coinManifest","coinDefinition","modelName","url","normalMap","diffuseMap","isCoinLoaded","denomination","Promise","resolve","addCoinToManifest","reject","loadManifest","then","has","manifest","namespace","allPromises","map","item","onItemLoaded","onItemProgress","onItemError","onlyPreload","load","flipY","wrapS","wrapT","addTexture","gltf","addAnimations","animations","addModel","setDataType","exrCubeRenderTarget","fromEquirectangular","all","removeTexture","removeModel","removeTextureKeys","delete","removeModelKeys","removeAnimationsKeys","removeAnimations","removeMaterialsKeys","existingTexture","getTexture","optionalAsset","warn","model","Currency","NotDefined","ALL","TJISEK","SEK","TJIEUR","EUR","Denomination","coinDefinitions","getBaseColor","level1Denominations","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","index","currency","extraLevelScale","level","weight","Number","gemColor","baseColor","loadOnStart","level2Denominations","Twenty","Thirty","Forty","Fifty","Sixty","Seventy","Eighty","Ninety","level3Denominations","OneHundred","TwoHundred","ThreeHundred","FourHundred","FiveHundred","SixHundred","SevenHundred","EightHundred","NineHundred","gemColors","level4Denominations","OneThousand","TwoThousand","ThreeThousand","FourThousand","FiveThousand","SixThousand","SevenThousand","EightThousand","NineThousand","definition","normalMapId","diffuseMapId","metalness","roughness","envMap","envMapIntensity","vertexColors","envMapTint","onBeforeCompile","volumetricNoiseMap","replace","envmap_physical_pars_fragment","soundMaps","onAppActiveChanged","isActive","mute","volume","id","howl","ctx","ids","join","concat","off","play","fade","rate","soundUrl","loop","soundMapItem","getMapItem","file","randomVolume","random","clamp","log","src","foundItem","searchItem","QueryStringUtil","query","location","href","substring","indexOf","vars","split","pair","decodeURIComponent","val","amount","count","pow","dummy","randomSeed","running","clock","bloomListIsDirty","gameLoop","requestAnimationFrame","getDelta","update","resize","postEffectManager","cameraAsPerspectiveType","aspect","updateProjectionMatrix","background","fog","setSceneAndCamera","z","rotation","light","finalD","dAsNumber","parseInt","getCoinDefinition","loadSingleCoin","getModel","processCoin","changeAmbience","add","loadedMesh","filter","getMaterial","geo","geometry","scale","coinMesh","castShadow","receiveShadow","coins","offset","stackY","updateMatrix","setMatrixAt","matrix","sin","PI","instanceMatrix","usePostEffects","reset","experiment","$refs","threeTargetContainer","appendChild","component","components","ExperimentWrapper","disable","config","productionTip","init","async","registerSoundMap"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,GAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,khBCvJT,W,kCCAA,W,iaCAIyC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,qBAAqBA,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,MAAM,CAACG,MAAM,CAAC,MAAQ,KAAK,OAAS,KAAK,QAAU,YAAY,KAAO,OAAO,MAAQ,+BAA+B,CAACH,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,mUAAmU,KAAO,aAAaH,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,4YAA4Y,KAAO,aAAaH,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,mGAAmG,KAAO,aAAaH,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,4VAA4V,KAAO,aAAaH,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,y/CAAy/C,KAAO,aAAaH,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,uNAAuN,KAAO,aAAaH,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,2aAA2a,KAAO,aAAaH,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,sUAAsU,KAAO,aAAaH,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,skBAAskB,KAAO,UAAU,OAAS,UAAU,eAAe,cAAcH,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,qyCAAqyC,KAAO,aAAaH,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,41BAA41B,KAAO,aAAaH,EAAG,OAAO,CAACG,MAAM,CAAC,EAAI,yTAAyT,KAAO,kBAAkB,IAC94OC,EAAkB,G,wBCDlB,EAAS,WAAa,IAAIR,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,qBAAqB,CAACF,EAAG,MAAM,CAACK,IAAI,uBAAuBH,YAAY,4BACzL,EAAkB,G,sPCCtB,MAAM,EAKJ,gIAFA,cAAkB,EAGhBL,KAAKS,GAAKC,SAASC,cAAc,UACjCX,KAAKS,GAAGG,MAAMC,SAAW,WACzBb,KAAKS,GAAGG,MAAME,IAAM,MACpBd,KAAKS,GAAGG,MAAMG,KAAO,MACrBf,KAAKS,GAAGG,MAAMI,MAAQ,OACtBhB,KAAKS,GAAGG,MAAMK,OAAS,OAevB,EAAAjB,KAAA,MAAiB,IAAI,QAAc,CACjCkB,OAAQlB,KAAKS,GACbU,WAAW,EACXC,OAAO,EACPC,SAAS,EACTC,uBAAuB,EACvBC,gBAAiB,qBAGnB,EAAAvB,KAAA,MAAewB,WAAY,EAAAxB,KAAA,MAC3B,EAAAA,KAAA,MAAeyB,eAAiB,EAAAzB,KAAA,MAAuB,OAAiB,QAExE,EAAAA,KAAA,MAAe0B,KAAKC,WAAY,EAChC,EAAA3B,KAAA,MAAe4B,cAAc,GAC7B,EAAA5B,KAAA,MAAe6B,cAAc,GAC7B,EAAA7B,KAAA,MAAe8B,YAAc,OAC7B,EAAA9B,KAAA,MAAe+B,UAAUC,SAAU,EACnC,EAAAhC,KAAA,MAAe+B,UAAUE,KAAO,QAEhC,EAAAjC,KAAA,MAAekC,cAAcvC,OAAOwC,kBAEpCnC,KAAKS,GAAG2B,iBACN,mBACAC,IACEA,EAAEC,mBAUJ,GAMc,qBAChB,SAAOtC,KAAP,MAGgB,mBAAClB,GACjB,EAAAkB,KAAA,MAAuBlB,EACvB,EAAAkB,KAAA,MAAewB,WAAY,EAAAxB,KAAA,MAC3B,EAAAA,KAAA,MAAeyB,eAAiB,EAAAzB,KAAA,MAAuB,OAAiB,QAG1E,cACE,SAAOA,KAAP,OAoBW,UAAI,ECnGL,MAAOuC,EAArB,cACU,KAAAC,eAAwC,GACxC,KAAAC,UAAmC,GACnC,KAAAC,KAA8B,GAEtC,SAASC,GAIP,YAHsDC,IAAlD5C,KAAKwC,eAAeK,KAAKzE,GAAKA,IAAMuE,IACtC3C,KAAKwC,eAAezF,KAAK4F,GAEpB3C,KAGT,IAAI2C,GAIF,YAHiDC,IAA7C5C,KAAKyC,UAAUI,KAAKzE,GAAKA,IAAMuE,IACjC3C,KAAKyC,UAAU1F,KAAK4F,GAEf3C,KAGT,QAAQ2C,GAIN,YAH4CC,IAAxC5C,KAAK0C,KAAKG,KAAKzE,GAAKA,IAAMuE,IAC5B3C,KAAK0C,KAAK3F,KAAK4F,GAEV3C,KAGT,OAAO2C,GACL,IAAIpG,EAAIyD,KAAKwC,eAAeM,UAAU1E,GAAKA,IAAMuE,IACtC,IAAPpG,GACFyD,KAAKwC,eAAe7E,OAAOpB,EAAG,GAGhCA,EAAIyD,KAAKyC,UAAUK,UAAU1E,GAAKA,IAAMuE,IAC7B,IAAPpG,GACFyD,KAAKyC,UAAU9E,OAAOpB,EAAG,GAG3BA,EAAIyD,KAAK0C,KAAKI,UAAU1E,GAAKA,IAAMuE,IACxB,IAAPpG,GACFyD,KAAK0C,KAAK/E,OAAOpB,EAAG,GAIxB,YACEyD,KAAKwC,eAAe/F,OAAS,EAC7BuD,KAAKyC,UAAUhG,OAAS,EACxBuD,KAAK0C,KAAKjG,OAAS,EAGrB,OAAOR,GACL+D,KAAKwC,eAAeO,QAAQJ,IAC1BA,EAAS1G,KAGX+D,KAAKyC,UAAUM,QAAQJ,IACrBA,EAAS1G,KAGP+D,KAAK0C,KAAKjG,OAAS,IACrBuD,KAAK0C,KAAKK,QAAQJ,IAChBA,EAAS1G,KAEX+D,KAAK0C,KAAKjG,OAAS,I,oOCtDzB,MAAM,EAUJ,uEATA,KAAAuG,SAAW,IAAIT,EACf,KAAAU,MAA0B,qBAAXtD,OACf,KAAAuD,KAAO,CACLlC,MAAQhB,KAAKiD,MAA4B,EAApBtD,OAAOwD,WAC5BlC,OAASjB,KAAKiD,MAA6B,EAArBtD,OAAOyD,YAC7BC,UAAW,GAyBb,KAAAC,cAAgB,KACVtD,KAAKkD,KAAKlC,QAAUrB,OAAOwD,YAAcnD,KAAKkD,KAAKjC,SAAWtB,OAAOyD,cACvEpD,KAAKkD,KAAKlC,MAAQrB,OAAOwD,WACzBnD,KAAKkD,KAAKjC,OAAStB,OAAOyD,YAE1B,EAAIpD,KAAJ,OACEL,OAAO4D,aAAP,EAAoBvD,KAApB,OAGF,EAAAA,KAAA,MAAiCwD,WAAW,KACtCxD,KAAKkD,KAAKlC,QAAUrB,OAAOwD,YAAcnD,KAAKkD,KAAKjC,SAAWtB,OAAOyD,cACvEpD,KAAKkD,KAAKlC,MAAQrB,OAAOwD,WACzBnD,KAAKkD,KAAKjC,OAAStB,OAAOyD,YAC1BpD,KAAKgD,SAASS,OAAOzD,KAAKkD,QAE3B,KAEHlD,KAAKgD,SAASS,OAAOzD,KAAKkD,QApC5BlD,KAAKkD,KAAKG,UAAarD,KAAKiD,MAAkC,EAA1BtD,OAAOwC,iBAYnC,aACHnC,KAAKiD,QACRtD,OAAOyC,iBAAiB,SAAUpC,KAAKsD,eACvCtD,KAAKsD,iBAyBT,UACE,OAAOtD,KAAKkD,MAID,UAAI,E,oCC/DJ,GACbQ,SAAU,CACRC,MAAO,CAAE1B,KAAM,IAAKnD,MAAO,EAAG8E,QAAS,MACvCC,SAAU,CAAE5B,KAAM,IAAKnD,MAAO,EAAG8E,QAAS,MAC1CE,MAAO,CAAE7B,KAAM,IAAKnD,MAAO,EAAG8E,QAAS,MACvCG,OAAQ,CAAE9B,KAAM,IAAKnD,MAAO,EAAG8E,QAAS,MACxCI,YAAa,CAAElF,MAAO,GACtBmF,cAAe,CAAEnF,MAAO,GACxBoF,WAAY,CAAEpF,MAAO,GACrBqF,aAAc,CAAErF,MAAO,GACvBsF,WAAY,CAAEtF,MAAO,IAAI,QAAQa,OAAOwD,WAAYxD,OAAOyD,cAC3DiB,KAAM,CAAEvF,MAAO,GACfwF,SAAU,CAAExF,MAAO,IAGrByF,aAAc,0NAYdC,eAAgB,ihBC3BH,GACbd,SAAU,CACRG,SAAU,CAAE5B,KAAM,IAAKnD,MAAO,IAAI,SAClCsF,WAAY,CAAEnC,KAAM,KAAMnD,MAAO,IAAI,UAGvCyF,aAAc,oqBAyBdC,eAAgB,shG,oCCdlB,MAAMC,EAAiB,IAAI,QAAQ,EAAK,GAClCC,EAAiB,IAAI,QAAQ,EAAK,GAE1B,MAAO,UAAwBC,EAAA,KAsB3C,YAAYP,EAAsCQ,EAAkBC,EAAgBC,GAClFC,QAEA/E,KAAK4E,cAAwBhC,IAAbgC,EAAyBA,EAAW,EACpD5E,KAAK6E,OAASA,EACd7E,KAAK8E,UAAYA,EACjB9E,KAAKoE,gBAA4BxB,IAAfwB,EAA2B,IAAI,QAAQA,EAAWY,EAAGZ,EAAWa,GAAK,IAAI,QAAQ,IAAK,KAGxGjF,KAAKkF,WAAa,IAAI,OAAM,EAAG,EAAG,GAGlC,IAAIC,EAAO,CACTC,UAAW,OACXC,UAAW,OACXC,OAAQ,QACRrD,KAAM,QAERjC,KAAKuF,wBAA0B,GAC/BvF,KAAKwF,sBAAwB,GAC7BxF,KAAKyF,MAAQ,EACb,IAAIC,EAAOC,KAAKC,MAAM5F,KAAKoE,WAAWY,EAAI,GACtCa,EAAOF,KAAKC,MAAM5F,KAAKoE,WAAWa,EAAI,GAE1CjF,KAAK8F,mBAAqB,IAAI,QAAkBJ,EAAMG,EAAMV,GAC5DnF,KAAK8F,mBAAmBlC,QAAQvF,KAAO,yBACvC2B,KAAK8F,mBAAmBlC,QAAQmC,iBAAkB,EAElD,IAAK,IAAIxJ,EAAI,EAAGA,EAAIyD,KAAKyF,MAAOlJ,IAAK,CACnC,IAAIyJ,EAAwB,IAAI,QAAkBN,EAAMG,EAAMV,GAE9Da,EAAsBpC,QAAQvF,KAAO,oBAAsB9B,EAC3DyJ,EAAsBpC,QAAQmC,iBAAkB,EAEhD/F,KAAKuF,wBAAwBxI,KAAKiJ,GAElC,IAAIC,EAAuB,IAAI,QAAkBP,EAAMG,EAAMV,GAE7Dc,EAAqBrC,QAAQvF,KAAO,oBAAsB9B,EAC1D0J,EAAqBrC,QAAQmC,iBAAkB,EAE/C/F,KAAKwF,sBAAsBzI,KAAKkJ,GAEhCP,EAAOC,KAAKC,MAAMF,EAAO,GAEzBG,EAAOF,KAAKC,MAAMC,EAAO,GAI3B,IAAIK,EAAiBC,EAAA,KACrBnG,KAAKoG,iBAAmB,QAAcC,MAAMH,EAAexC,UAE3D1D,KAAKoG,iBAAiB,uBAAuBtH,MAAQgG,EACrD9E,KAAKoG,iBAAiB,eAAetH,MAAQ,IAE7CkB,KAAKsG,uBAAyB,IAAI,QAAe,CAC/C5C,SAAU1D,KAAKoG,iBACf7B,aAAc2B,EAAe3B,aAC7BC,eAAgB0B,EAAe1B,eAC/B+B,QAAS,KAIXvG,KAAKwG,uBAAyB,GAC9B,IAAIC,EAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,IACnCf,EAAOC,KAAKC,MAAM5F,KAAKoE,WAAWY,EAAI,GACtCa,EAAOF,KAAKC,MAAM5F,KAAKoE,WAAWa,EAAI,GAEtC,IAAK,IAAI1I,EAAI,EAAGA,EAAIyD,KAAKyF,MAAOlJ,IAC9ByD,KAAKwG,uBAAuBzJ,KAAKiD,KAAK0G,yBAAyBD,EAAgBlK,KAE/EyD,KAAKwG,uBAAuBjK,GAAGmH,SAAS,WAAW5E,MAAQ,IAAI,QAAQ4G,EAAMG,GAE7EH,EAAOC,KAAKC,MAAMF,EAAO,GAEzBG,EAAOF,KAAKC,MAAMC,EAAO,GAI3B7F,KAAK2G,kBAAoB3G,KAAK4G,qBAAqB5G,KAAKyF,OACxDzF,KAAK2G,kBAAkBjD,SAAS,gBAAgB5E,MAAQkB,KAAKwF,sBAAsB,GAAG5B,QACtF5D,KAAK2G,kBAAkBjD,SAAS,gBAAgB5E,MAAQkB,KAAKwF,sBAAsB,GAAG5B,QACtF5D,KAAK2G,kBAAkBjD,SAAS,gBAAgB5E,MAAQkB,KAAKwF,sBAAsB,GAAG5B,QACtF5D,KAAK2G,kBAAkBjD,SAAS,gBAAgB5E,MAAQkB,KAAKwF,sBAAsB,GAAG5B,QACtF5D,KAAK2G,kBAAkBjD,SAAS,gBAAgB5E,MAAQkB,KAAKwF,sBAAsB,GAAG5B,QACtF5D,KAAK2G,kBAAkBjD,SAAS,iBAAiB5E,MAAQ8F,EACzD5E,KAAK2G,kBAAkBjD,SAAS,eAAe5E,MAAQ,GACvDkB,KAAK2G,kBAAkBE,aAAc,EAErC,IAAIC,EAAe,CAAC,EAAK,GAAK,GAAK,GAAK,IACxC9G,KAAK2G,kBAAkBjD,SAAS,gBAAgB5E,MAAQgI,EACxD9G,KAAK+G,gBAAkB,CACrB,IAAI,QAAQ,EAAG,EAAG,GAClB,IAAI,QAAQ,EAAG,EAAG,GAClB,IAAI,QAAQ,EAAG,EAAG,GAClB,IAAI,QAAQ,EAAG,EAAG,GAClB,IAAI,QAAQ,EAAG,EAAG,IAEpB/G,KAAK2G,kBAAkBjD,SAAS,mBAAmB5E,MAAQkB,KAAK+G,qBAG7CnE,IAAfoE,EAAA,MACFC,QAAQC,MAAM,wCAGhB,IAAIC,EAAaH,EAAA,KAEjBhH,KAAKoH,aAAe,QAAcf,MAAMc,EAAWzD,UACnD1D,KAAKoH,aAAa,WAAWtI,MAAQ,EAErCkB,KAAKqH,aAAe,IAAI,QAAe,CACrC3D,SAAU1D,KAAKoH,aACf7C,aAAc4C,EAAW5C,aACzBC,eAAgB2C,EAAW3C,eAC3B8C,SAAU,OACVC,WAAW,EACXC,YAAY,EACZC,aAAa,IAGfzH,KAAKgC,SAAU,EACfhC,KAAK0H,WAAY,EAEjB1H,KAAK2H,cAAgB,IAAI,OACzB3H,KAAK4H,cAAgB,EAErB5H,KAAK6H,MAAQ,IAAI,OAEjB7H,KAAK8H,OAAS,IAAI,OAGpB,UACE,IAAK,IAAIvL,EAAI,EAAGA,EAAIyD,KAAKuF,wBAAwB9I,OAAQF,IACvDyD,KAAKuF,wBAAwBhJ,GAAGwL,UAGlC,IAAK,IAAIxL,EAAI,EAAGA,EAAIyD,KAAKwF,sBAAsB/I,OAAQF,IACrDyD,KAAKwF,sBAAsBjJ,GAAGwL,UAGhC/H,KAAK8F,mBAAmBiC,UAG1B,QAAQ/G,EAAeC,GACrB,IAAIyE,EAAOC,KAAKC,MAAM5E,EAAQ,GAC1B6E,EAAOF,KAAKC,MAAM3E,EAAS,GAE/BjB,KAAK8F,mBAAmBkC,QAAQtC,EAAMG,GAEtC,IAAK,IAAItJ,EAAI,EAAGA,EAAIyD,KAAKyF,MAAOlJ,IAC9ByD,KAAKuF,wBAAwBhJ,GAAGyL,QAAQtC,EAAMG,GAC9C7F,KAAKwF,sBAAsBjJ,GAAGyL,QAAQtC,EAAMG,GAE5C7F,KAAKwG,uBAAuBjK,GAAGmH,SAAS,WAAW5E,MAAQ,IAAI,QAAQ4G,EAAMG,GAE7EH,EAAOC,KAAKC,MAAMF,EAAO,GACzBG,EAAOF,KAAKC,MAAMC,EAAO,GAI7B,OACEoC,EACAC,EACAC,EACAC,EACAC,GAEAJ,EAASK,cAActI,KAAK2H,eAC5B3H,KAAK4H,cAAgBK,EAASM,gBAC9B,IAAIC,EAAeP,EAASzG,UAC5ByG,EAASzG,WAAY,EAErByG,EAASrG,cAAc5B,KAAKkF,WAAY,GAEpCmD,GAAYJ,EAASQ,MAAMC,QAAQrH,QAAQsH,SAAQ,GAevD3I,KAAKoG,iBAAiB,YAAYtH,MAAQqJ,EAAWvE,QACrD5D,KAAKoG,iBAAiB,uBAAuBtH,MAAQkB,KAAK8E,UAC1D9E,KAAK8H,OAAOc,SAAW5I,KAAKsG,uBAE5B2B,EAASY,gBAAgB7I,KAAK8F,oBAC9BmC,EAASa,QACT9I,KAAK8H,OAAOhI,OAAOmI,GAInB,IAAIc,EAAoB/I,KAAK8F,mBAE7B,IAAK,IAAIvJ,EAAI,EAAGA,EAAIyD,KAAKyF,MAAOlJ,IAC9ByD,KAAK8H,OAAOc,SAAW5I,KAAKwG,uBAAuBjK,GAEnDyD,KAAKwG,uBAAuBjK,GAAGmH,SAAS,gBAAgB5E,MAAQiK,EAAkBnF,QAClF5D,KAAKwG,uBAAuBjK,GAAGmH,SAAS,aAAa5E,MAAQ2F,EAC7DwD,EAASY,gBAAgB7I,KAAKuF,wBAAwBhJ,IACtD0L,EAASa,QACT9I,KAAK8H,OAAOhI,OAAOmI,GAEnBjI,KAAKwG,uBAAuBjK,GAAGmH,SAAS,gBAAgB5E,MAAQkB,KAAKuF,wBAAwBhJ,GAAGqH,QAChG5D,KAAKwG,uBAAuBjK,GAAGmH,SAAS,aAAa5E,MAAQ4F,EAC7DuD,EAASY,gBAAgB7I,KAAKwF,sBAAsBjJ,IACpD0L,EAASa,QACT9I,KAAK8H,OAAOhI,OAAOmI,GAEnBc,EAAoB/I,KAAKwF,sBAAsBjJ,GAKjDyD,KAAK8H,OAAOc,SAAW5I,KAAK2G,kBAC5B3G,KAAK2G,kBAAkBjD,SAAS,iBAAiB5E,MAAQkB,KAAK4E,SAC9D5E,KAAK2G,kBAAkBjD,SAAS,eAAe5E,MAAQkB,KAAK6E,OAC5D7E,KAAK2G,kBAAkBjD,SAAS,mBAAmB5E,MAAQkB,KAAK+G,gBAEhEkB,EAASY,gBAAgB7I,KAAKuF,wBAAwB,IACtD0C,EAASa,QACT9I,KAAK8H,OAAOhI,OAAOmI,GAInBjI,KAAK8H,OAAOc,SAAW5I,KAAKqH,aAC5BrH,KAAKoH,aAAa,YAAYtI,MAAQkB,KAAKuF,wBAAwB,GAAG3B,QAElEyE,GAAYJ,EAASQ,MAAMC,QAAQrH,QAAQsH,SAAQ,GAMvDV,EAASY,gBAAgBV,GACzBnI,KAAK8H,OAAOhI,OAAOmI,GAKnBA,EAASrG,cAAc5B,KAAK2H,cAAe3H,KAAK4H,eAChDK,EAASzG,UAAYgH,EAGvB,yBAAyBQ,GACvB,OAAO,IAAI,QAAe,CACxBzC,QAAS,CACP0C,cAAeD,EACfE,MAAOF,GAGTtF,SAAU,CACRyF,aAAc,CAAErK,MAAO,MACvBsK,QAAS,CAAEtK,MAAO,IAAI,QAAQ,GAAK,KACnCuK,UAAW,CAAEvK,MAAO,IAAI,QAAQ,GAAK,MAGvCyF,aAAc,kLAQdC,eAAgB,2iCA+BpB,qBAAqBiB,GACnB,OAAO,IAAI,QAAe,CACxBc,QAAS,CACP+C,SAAU7D,GAGZ/B,SAAU,CACR6F,aAAc,CAAEzK,MAAO,MACvB0K,aAAc,CAAE1K,MAAO,MACvB2K,aAAc,CAAE3K,MAAO,MACvB4K,aAAc,CAAE5K,MAAO,MACvB6K,aAAc,CAAE7K,MAAO,MACvB8K,YAAa,CAAE9K,MAAO,MACtB+K,cAAe,CAAE/K,MAAO,GACxBgI,aAAc,CAAEhI,MAAO,MACvBiI,gBAAiB,CAAEjI,MAAO,MAC1BgL,YAAa,CAAEhL,MAAO,IAGxByF,aAAc,kLAQdC,eAAgB,4xCCpXP,OACbd,SAAU,CACRG,SAAU,CAAE5B,KAAM,IAAKnD,MAAO,EAAG8E,QAAS,MAC1CmG,OAAQ,CAAE9H,KAAM,KAAMnD,MAAO,IAAI,QAAc,GAAK,KACpDsF,WAAY,CAAEnC,KAAM,KAAMnD,MAAO,IAAI,QAAca,OAAOwD,WAAYxD,OAAOyD,cAC7EwB,SAAU,CAAE3C,KAAM,IAAKnD,MAAO,IAC9BkL,IAAK,CAAE/H,KAAM,IAAKnD,MAAO,KAG3ByF,aAAc,4KAWdC,eAAgB,mkD,gMCGlB,MAAMyF,EAAgB,IAAI,OAAkB,CAAEC,MAAO,IAC/CC,EAAuB,IAAI,OAAkB,CAAED,MAAO,I,0UAE9C,MAAO,GAkBnB,YAAYjC,GAAuB,o5BAhBnC,aAAgB,GAChB,aAAkB,GAElB,aAAmC,GAUnC,gBAAqB,EACrB,eAAc,EAGZ,EAAAjI,KAAA,MAAiBiI,EACjB,EAAAjI,KAAA,MAAoB,EAGpB,EAAAA,KAAA,MAA0B,IAAI,QAAkBL,OAAOwD,WAAYxD,OAAOyD,YAAa,CACrFgC,UAAW,OACXC,UAAW,OACXC,OAAQ,QACR8E,eAAe,EACfC,SAAU,OACVpI,KAAM,SAER,EAAAjC,KAAA,MAA4B,IAAI,QAAkBL,OAAOwD,WAAYxD,OAAOyD,YAAa,CACvFgC,UAAW,OACXC,UAAW,OACXC,OAAQ,QACR8E,eAAe,EACfC,SAAU,OACVpI,KAAM,SAGR,EAAAjC,KAAA,MAAsB,IAAIsK,EAAA,KAAJ,EAAmBtK,KAAnB,QAAmCA,KAAnC,OACtB,EAAAA,KAAA,MAAoBkC,cAAc,GAElC,EAAAlC,KAAA,MAAwB,IAAIsK,EAAA,KAAJ,EAAmBtK,KAAnB,QAAmCA,KAAnC,OACxB,EAAAA,KAAA,MAAsBkC,cAAc,EAAWgB,KAAKG,WAEpD,EAAArD,KAAA,MAAkB,IAAI,EAAgB,IAAI,QAAQL,OAAOwD,WAAYxD,OAAOyD,aAAc,IAAM,IAAM,KACtG,EAAApD,KAAA,MAAgB0H,WAAY,EAC5B,EAAA1H,KAAA,MAAgB8E,UAAY,IAC5B,EAAA9E,KAAA,MAAgB4E,SAAW,IAC3B,EAAA5E,KAAA,MAAgB6E,OAAS,IACzB,EAAA7E,KAAA,MAAgBgC,SAAU,EAE1B,EAAAhC,KAAA,MAAqB,IAAIuK,EAAA,KAAW,GACpC,EAAAvK,KAAA,MAAiB,IAAIuK,EAAA,KAAW,GAChC,EAAAvK,KAAA,MAAegC,QAAsC,IAA5BrC,OAAOwC,iBAEhC,EAAAnC,KAAA,QAAmB,IAAIwK,EAAA,KAAJ,EAAexK,KAAf,QAA4BA,KAA5B,WAA0C4C,OAAWA,EAAW,GACnF,EAAA5C,KAAA,QAAiB8I,OAAQ,EACzB,EAAA9I,KAAA,QAAiB0H,WAAY,EAE7B,EAAA1H,KAAA,MAAoByK,QAApB,EAA4BzK,KAA5B,SACA,EAAAA,KAAA,MAAoByK,QAApB,EAA4BzK,KAA5B,OAEA,EAAAA,KAAA,QAAwB,IAAIuK,EAAA,KAAW,GACvC,EAAAvK,KAAA,QAAsB0D,SAASK,OAAOjF,MAAQ,EAAAkB,KAAA,MAAoB0K,cAAc9G,QAChF,EAAA5D,KAAA,QAAsB2K,gBAAiB,EAGvC,EAAA3K,KAAA,MAAsByK,QAAtB,EAA8BzK,KAA9B,SAGA,EAAAA,KAAA,MAAsByK,QAAtB,EAA8BzK,KAA9B,SAEAA,KAAK4K,eAAe,IAqDR,eAAC9L,GACb,EAAAkB,KAAA,QAAmBlB,EACnB,EAAAkB,KAAA,QAAsB0D,SAASQ,WAAWpF,MAA1C,EAAkDkB,KAAlD,QAGF,kBAAkB6K,EAAcC,GAC9B,EAAA9K,KAAA,MAAc6K,EACd,EAAA7K,KAAA,MAAe8K,EAEf,EAAA9K,KAAA,QAAiB8K,OAASA,EAC1B,EAAA9K,KAAA,QAAiB6K,MAAQA,EAG3B,eAAe/L,GACb,EAAAkB,KAAA,MAAoBlB,EACpB,EAAAkB,KAAA,QAAsB0D,SAASM,YAAYlF,MAA3C,EAAmDkB,KAAnD,MAGF,kBAEE,EAAAA,KAAA,MAA0BvD,OAAS,EAE/B,EAAAuD,KAAA,OAAe,EAAAA,KAAA,MAAY+K,UAE7B,EAAA/K,KAAA,MAAYgL,SAAUC,IAEJ,SAAbA,EAAIhJ,MACU,gBAAbgJ,EAAIhJ,MACS,UAAbgJ,EAAIhJ,OACJgJ,EAAIC,SAASC,mBACe,IAA7BF,EAAIC,SAASE,cACiB,IAA7BH,EAAIC,SAASE,cACbH,EAAIC,SAASG,gBACbJ,EAAIC,SAASC,kBAGZF,EAAI5M,KAAKiN,SAAS,aAClBL,EAAI5M,KAAKiN,SAAS,WAClB,EAAAtL,KAAA,MAA0B6C,KAAKmC,GAAKiG,EAAIM,MAAQvG,EAAEuG,OAASN,EAAIM,OAEhE,EAAAvL,KAAA,MAA0BjD,KAAKkO,KAOzC,OAAO5G,EAAcmH,GACf,EAAAxL,KAAA,MAAoB,GACtB,EAAAA,KAAA,MAAgBgC,SAAU,EACe,IAArC,EAAAhC,KAAA,MAA0BvD,QAC5BuD,KAAKyL,kBAGP,EAAAzL,KAAA,MAA0B+C,QAASkI,IAEjC,GAAIA,EAAIC,SAASG,cACfJ,EAAIC,SAASQ,wBAA0BT,EAAIU,QAC3CV,EAAIU,SAAU,OACT,GAAIV,EAAIC,SAASC,iBACjB,EAAAnL,KAAD,UACFiL,EAAIU,SAAU,QAKb,IAAiC,IAA7BV,EAAIC,SAASE,kBAAsDxI,IAA7BqI,EAAIC,SAASE,YAA2B,CACrF,MAAMQ,EAAOX,EACbW,EAAKV,SAASW,iBAAmBD,EAAKhD,SACtCgD,EAAKhD,SAAyB,gBAAdgD,EAAK3J,KAAyBkI,EAAuBF,MAIhE,CACL,MAAM2B,EAAOX,EACb,GAAIW,EAAM,CACR,MAAME,EAAMF,EAAKhD,SACbkD,EAAIZ,SAASa,QAAUD,EAAIZ,SAASa,OAAOrI,SAASsI,gBACtDF,EAAIZ,SAASa,OAAOrI,SAASsI,cAAclN,MAAQ,GAGjDgN,EAAIpI,UAAYoI,EAAIpI,SAASsI,gBAC/BF,EAAIpI,SAASsI,cAAclN,MAAQ,OAM3C,EAAAkB,KAAA,MAAoBF,OAAO0L,GAE3B,EAAAxL,KAAA,MAA0B+C,QAASkI,IACjC,GAAIA,EAAIC,SAASG,cACfJ,EAAIU,QAAUV,EAAIC,SAASQ,6BACtB,GAAIT,EAAIC,SAASC,iBACtBF,EAAIU,SAAU,OACT,IAAiC,IAA7BV,EAAIC,SAASE,kBAAsDxI,IAA7BqI,EAAIC,SAASE,YAA2B,CACvF,MAAMQ,EAAOX,EAIbW,EAAKhD,SAAWgD,EAAKV,SAASW,qBACzB,CACL,MAAMD,EAAOX,EACb,GAAIW,EAAM,CACR,MAAME,EAAMF,EAAKhD,SACbkD,EAAIZ,SAASa,QAAUD,EAAIZ,SAASa,OAAOrI,SAASsI,gBACtDF,EAAIZ,SAASa,OAAOrI,SAASsI,cAAclN,MAAQ,GAGjDgN,EAAIpI,UAAYoI,EAAIpI,SAASsI,gBAC/BF,EAAIpI,SAASsI,cAAclN,MAAQ,QAM3C,EAAAkB,KAAA,MAAgBgC,SAAU,EAG5B,EAAAhC,KAAA,MAAsBF,OAAO0L,GAE7B,EAAAxL,KAAA,MAAe6I,gBAAgB,MAGjC,SACE,MAAM3F,EAAO,EAAWA,KAClB+I,EAAI/I,EAAKlC,MACTkL,EAAIhJ,EAAKjC,OAEf,EAAAjB,KAAA,MAAsBgI,QAAQiE,EAAGC,GACjC,EAAAlM,KAAA,MAAoBgI,QAAQiE,EAAGC,GAE/B,EAAAlM,KAAA,MAAe0D,SAASU,WAAWtF,MAAMqN,IAAIF,EAAGC,GAChD,EAAAlM,KAAA,QAAsB0D,SAASU,WAAWtF,MAAMqN,IAAIF,EAAGC,GACvD,EAAAlM,KAAA,QAAsB0D,SAASK,OAAOjF,MAAQ,EAAAkB,KAAA,MAAoB0K,cAAc9G,QAGlF,Y,uQCvQF,MAAMwI,GAAgB,IAAI,QACpBC,GAAa,IAAIC,GAAA,KACjBC,GAAY,IAAIC,GAAA,K,2MAEtB,MAAM,GAAN,8dACE,gBAAkC,GAClC,gBAAwC,IAAIC,IAC5C,gBAAuC,IAAIA,IAC3C,gBAAmD,IAAIA,IACvD,gBAA0C,IAAIA,IAC9C,gBAA2C,IAAIA,IAC/C,gBAAuC,GACvC,KAAAC,gBAAmC,IAAInK,EACvC,gBAA0C,IAAIoK,QAEpC,aACR,GAAA3M,KAAA,QAAuB,IAAI,QAAe,EAAe4M,eACzD,GAAA5M,KAAA,QAAqB6M,+BAgCrB,MAAMC,EAA2B,IAAK,IAEtC,OAAO9M,KAAK+M,oBAAoBD,GAG1B,kBAAkBE,EAA6BC,QACcrK,IAA/DoK,EAAanK,KAAKmC,GAAKA,EAAE5F,MAAQ6N,EAAeC,YAClDF,EAAajQ,KAAK,CAChBqC,IAAK6N,EAAeC,UACpBC,IAAK,kBAAoBF,EAAeC,YAI5CF,EAAajQ,KAAK,CAChBqC,IAAK6N,EAAeG,UACpBD,IAAK,oBAAsBF,EAAeG,YAG5CJ,EAAajQ,KAAK,CAChBqC,IAAK6N,EAAeI,WACpBF,IAAK,oBAAsBF,EAAeI,aAI9C,eAAeJ,GACb,GAAIjN,KAAKsN,aAAaL,EAAeM,cACnC,OAAOC,QAAQC,UAGjB,MAAMT,EAA8B,GAEpC,OADAhN,KAAK0N,kBAAkBV,EAAcC,GAC9B,IAAIO,QAAc,CAACC,EAASE,KACjC3N,KAAK4N,aAAaZ,EAAc,SAASa,KACvC,KACE,GAAA7N,KAAA,QAAkBmM,IAAIc,EAAeM,cAAc,GACnDE,KAEF,KACEE,QAMR,aAAaJ,GACX,SAAI,GAAAvN,KAAA,QAAkB8N,IAAIP,KAAiB,GAAAvN,KAAA,QAAkBtB,IAAI6O,IAMnE,oBAAoBT,GAClB,OAAO,IAAIU,QAAc,CAACC,EAASE,KACjC3N,KAAK4N,aAAad,EAAW,UAAUe,KACrC,KACEJ,KAEF,KACEE,QAMR,aAAaI,EAAyBC,GACpC,MAAMC,EAA+BF,EAASG,IAAIC,GACzC,IAAIX,QAAc,CAACC,EAASE,KACjC,MAAMS,EAAe,KACnBX,KAEIY,EAAiB,OACjBC,EAAc,KAClBX,KAGEQ,EAAKI,YACPH,IAIED,EAAKhB,IAAI7B,SAAS,SAAW6C,EAAKhB,IAAI7B,SAAS,QACjDc,GAAcoC,KACZL,EAAKhB,IACLvJ,IACEA,EAAQ6K,OAAQ,EAChB7K,EAAQ8K,MAAQ9K,EAAQ+K,MAAQ,QAChC/K,EAAQyG,SAAW,QACnBrK,KAAK4O,WAAWT,EAAK/O,IAAKwE,EAASoK,GACnCI,KAEFC,EACAC,GAEOH,EAAKhB,IAAI7B,SAAS,UAAY6C,EAAKhB,IAAI7B,SAAS,QACzDe,GAAWmC,KACTL,EAAKhB,IACL0B,IACE7O,KAAK8O,cAAcX,EAAK/O,IAAKyP,EAAKE,WAAYf,GAC9ChO,KAAKgP,SAASb,EAAK/O,IAAKyP,EAAKhE,MAAmBmD,GAChDI,KAEFC,EACAC,GAEOH,EAAKhB,IAAI7B,SAAS,SAC3BiB,GAAU0C,YAAY,SAAkBT,KACtCL,EAAKhB,IACJvJ,IACCA,EAAQ6K,OAAQ,EAEhB,MAAMS,EAAsB,GAAAlP,KAAA,QAAqBmP,oBAAoBvL,GACrE5D,KAAK4O,WAAWT,EAAK/O,IAAK8P,EAAoBtL,QAASoK,GAEvDpK,EAAQmE,UACRqG,KAEFC,EACAC,MAMR,OAAOd,QAAQ4B,IAAInB,GAAaJ,KAC9B,OACA3G,IACED,QAAQC,MAAM,+BAAgCA,KAKpD,eAAe6G,GACbA,EAAShL,QAASoL,IAChBnO,KAAKqP,cAAclB,EAAK/O,KACxBY,KAAKsP,YAAYnB,EAAK/O,OAI1B,gBAAgB4O,GAEd,MAAMuB,EAA8B,GACpC,GAAAvP,KAAA,QAAqB+C,QAAQ,CAACjE,EAAOM,KAC/B,GAAAY,KAAA,QAAuB8N,IAAIhP,IAAU,GAAAkB,KAAA,QAAuBtB,IAAII,KAAWkP,IAC7EuB,EAAkBxS,KAAKqC,GACvB,GAAAY,KAAA,QAAuBwP,OAAO1Q,MAGlCyQ,EAAkBxM,QAAQ3D,IACxBY,KAAKqP,cAAcjQ,KAIrB,MAAMqQ,EAA4B,GAClC,GAAAzP,KAAA,QAAmB+C,QAAQ,CAACjE,EAAOM,KAC7B,GAAAY,KAAA,QAAuB8N,IAAIhP,IAAU,GAAAkB,KAAA,QAAuBtB,IAAII,KAAWkP,IAC7EyB,EAAgB1S,KAAKqC,GACrB,GAAAY,KAAA,QAAuBwP,OAAO1Q,MAGlC2Q,EAAgB1M,QAAQ3D,IACtBY,KAAKsP,YAAYlQ,KAInB,MAAMsQ,EAAiC,GACvC,GAAA1P,KAAA,QAAwB+C,QAAQ,CAACjE,EAAOM,KAClC,GAAAY,KAAA,QAAuB8N,IAAIhP,IAAU,GAAAkB,KAAA,QAAuBtB,IAAII,KAAWkP,IAC7E0B,EAAqB3S,KAAKqC,GAC1B,GAAAY,KAAA,QAAuBwP,OAAO1Q,MAGlC4Q,EAAqB3M,QAAQ3D,IAC3BY,KAAK2P,iBAAiBvQ,KAIxB,MAAMwQ,EAAgC,GACtC,GAAA5P,KAAA,QAAsB+C,QAAQ,CAACjE,EAAOM,KAChC,GAAAY,KAAA,QAAuB8N,IAAIhP,IAAU,GAAAkB,KAAA,QAAuBtB,IAAII,KAAWkP,IAC7E4B,EAAoB7S,KAAKqC,GACzB,GAAAY,KAAA,QAAuBwP,OAAO1Q,MAGlC8Q,EAAoB7M,QAAQ3D,IAC1BY,KAAKsP,YAAYlQ,KAIrB,WAAWA,EAAawE,EAAkBoK,GACpC,GAAAhO,KAAA,QAAqB8N,IAAI1O,KAG3B,GAAAY,KAAA,QAAuBmM,IAAIvI,EAASoK,GACpC,GAAAhO,KAAA,QAAqBmM,IAAI/M,EAAKwE,IAIlC,WAAWxE,GACT,GAAI,GAAAY,KAAA,QAAqB8N,IAAI1O,GAAM,CACjC,MAAMwE,EAAU,GAAA5D,KAAA,QAAqBtB,IAAIU,GAEzC,OAAIwE,GAGK,KAGT,OAAO,KAIX,gBAAgBxE,EAAa4O,EAAY,UACvC,OAAO,IAAIR,QAAQ,CAACC,EAASE,KAC3B,MAAMkC,EAAkB7P,KAAK8P,WAAW1Q,GACxC,GAAIyQ,EACFpC,EAAQoC,OACH,CACL,MAAME,EAAgB,GAAA/P,KAAA,QAA2B6C,KAAKsL,GAAQA,EAAK/O,MAAQA,GACvE2Q,EACF3D,GAAcoC,KAAKuB,EAAc5C,IAAKvJ,IACpCA,EAAQ6K,OAAQ,EAChB7K,EAAQ8K,MAAQ9K,EAAQ+K,MAAQ,QAChC/K,EAAQyG,SAAW,QACnBrK,KAAK4O,WAAWmB,EAAc3Q,IAAKwE,EAASoK,GAC5CP,EAAQ7J,MAGVqD,QAAQ+I,KAAK,MAAO5Q,EAApB,GAAyBY,KAAzB,SACA,KAAM,kCAAoCZ,GAC1CuO,QAMR,cAAcvO,GACR,GAAAY,KAAA,QAAqB8N,IAAI1O,KAEvB,GAAAY,KAAA,QAAqBtB,IAAIU,IAC3B,GAAAY,KAAA,QAAqBtB,IAAIU,GAAM2I,UAEjC,GAAA/H,KAAA,QAAqBwP,OAAOpQ,IAIhC,SAASA,EAAa6Q,EAAiBjC,GACrCiC,EAAM/E,SAASE,aAAc,EAExB,GAAApL,KAAA,QAAmB8N,IAAI1O,KAC1B,GAAAY,KAAA,QAAuBmM,IAAI8D,EAAOjC,GAClC,GAAAhO,KAAA,QAAmBmM,IAAI/M,EAAK6Q,IAIhC,SAAS7Q,GACP,OAAI,GAAAY,KAAA,QAAmB8N,IAAI1O,GAClB,GAAAY,KAAA,QAAmBtB,IAAIU,QAE9B,EAIJ,YAAYA,GACN,GAAAY,KAAA,QAAmB8N,IAAI1O,IAEzB,GAAAY,KAAA,QAAmBwP,OAAOpQ,GAI9B,cAAcA,EAAa2P,EAA6Bf,GACjD,GAAAhO,KAAA,QAAwB8N,IAAI1O,KAC/B,GAAAY,KAAA,QAAwBmM,IAAI/M,EAAK2P,GACjC,GAAA/O,KAAA,QAAuBmM,IAAI4C,EAAYf,IAI3C,cAAc5O,GACZ,OAAI,GAAAY,KAAA,QAAwB8N,IAAI1O,GACvB,GAAAY,KAAA,QAAwBtB,IAAIU,QAEnC,EAIJ,iBAAiBA,GACX,GAAAY,KAAA,QAAwB8N,IAAI1O,IAE9B,GAAAY,KAAA,QAAwBwP,OAAOpQ,GAInC,YAAYA,EAAawJ,EAAoBoF,GAC3C,GAAAhO,KAAA,QAAuBmM,IAAIvD,EAAUoF,GACrC,GAAAhO,KAAA,QAAsBmM,IAAI/M,EAAKwJ,GAGjC,YAAYxJ,GACV,OAAI,GAAAY,KAAA,QAAsB8N,IAAI1O,GACrB,GAAAY,KAAA,QAAsBtB,IAAIU,QAEjC,EAIJ,eAAeA,GACT,GAAAY,KAAA,QAAsB8N,IAAI1O,IAE5B,GAAAY,KAAA,QAAsBwP,OAAOpQ,IAIpB,ICrYH8Q,GDqYG,OAAI,ICrYnB,SAAYA,GACV,6BACA,eAEA,qBACA,eAEA,qBACA,gBARF,CAAYA,QAAQ,KAiBNA,GAASC,WACTD,GAASE,IAETF,GAASG,OACTH,GAASI,IAETJ,GAASK,OACTL,GAASM,IAOR,IC/BVC,GD+BU,OC/Bf,SAAKA,GACH,sBAEA,oCACA,oCACA,wCACA,sCACA,sCACA,oCACA,wCACA,wCACA,sCAEA,qCACA,2CACA,2CACA,yCACA,yCACA,yCACA,6CACA,2CACA,2CAEA,sBACA,sBACA,0BACA,wBACA,wBACA,sBACA,0BACA,0BACA,wBAEA,sBACA,4BACA,4BACA,0BACA,0BACA,0BACA,8BACA,4BACA,4BAEA,oCACA,oCACA,wCACA,sCACA,sCACA,oCACA,wCACA,wCACA,sCAEA,sCACA,sCACA,0CACA,wCACA,wCACA,sCACA,0CACA,0CACA,yCA7DF,CAAKA,QAAY,KAkEF,UC9Df,MAAMC,GAAoC,GAEpCC,GAAgBpD,IACpB,OAAQA,GACN,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,SACT,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,SACT,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,SAGX,OAAO,UAGHqD,GAAsB,CAC1B,GAAaC,IACb,GAAaC,IACb,GAAaC,MACb,GAAaC,KACb,GAAaC,KACb,GAAaC,IACb,GAAaC,MACb,GAAaC,MACb,GAAaC,KACb,GAAaC,KAEfV,GAAoB7N,QAAQ,CAACwK,EAA4BgE,KACvDb,GAAgB3T,KAAK,CACnBwQ,eACAiE,SAAU,GAASpB,IACnBvL,OAAQ,GACR4M,gBAAiB,GAAKF,EAAQ,EAAI,GAAM,IAAMA,EAAQ,EAAI,GAAM,GAChEG,MAAO,EACPC,OAAQ,KACRzE,UAAW,mBACXE,UAAW,WAAawE,OAAOrE,GAAgB,IAAM,gBACrDF,WAAY,WAAauE,OAAOrE,GAAgB,IAAM,mBACtDsE,SAAU,EACVC,UAAWnB,GAAapD,GACxBwE,aAAa,MAIjB,MAAMC,GAAsB,CAC1B,GAAaC,OACb,GAAaC,OACb,GAAaC,MACb,GAAaC,MACb,GAAaC,MACb,GAAaC,QACb,GAAaC,OACb,GAAaC,QAEfR,GAAoBjP,QAAQ,CAACwK,EAA4BgE,KACvDb,GAAgB3T,KAAK,CACnBwQ,eACAiE,SAAU,GAASpB,IACnBvL,OAAQ,IACR4M,gBAAiB,GAAKF,EAAQ,EAAI,GAAM,IAAMA,EAAQ,EAAI,GAAM,GAChEG,MAAO,EACPC,OAAQ,KACRzE,UAAW,mBACXE,UAAW,WAAawE,OAAOrE,GAAgB,IAAM,gBACrDF,WAAY,WAAauE,OAAOrE,GAAgB,IAAM,mBACtDsE,SAAU,EACVC,UAAWnB,GAAapD,GACxBwE,aAAa,MAIjB,MAAMU,GAAsB,CAC1B,GAAaC,WACb,GAAaC,WACb,GAAaC,aACb,GAAaC,YACb,GAAaC,YACb,GAAaC,WACb,GAAaC,aACb,GAAaC,aACb,GAAaC,aAGTC,GAAY,CAChB,QAAU,QAAU,QAAU,OAAU,OAAU,OAAU,QAAU,SAAU,SAAU,QAAU,SAEtGV,GAAoB1P,QAAQ,CAACwK,EAA4BgE,KACvDb,GAAgB3T,KAAK,CACnBwQ,eACAiE,SAAU,GAASpB,IACnBvL,OAAQ,IACR4M,gBAAiB,GAAKF,EAAQ,EAAI,GAAM,IAAMA,EAAQ,EAAI,GAAM,GAChEI,OAAQ,KACRD,MAAO,EACPxE,UAAW,mBACXE,UAAW,WAAawE,OAAOrE,GAAgB,IAAM,gBACrDF,WAAY,WAAauE,OAAOrE,GAAgB,IAAM,mBACtDsE,SAAUsB,GAAU5B,GACpBO,UAAWnB,GAAapD,GACxBwE,aAAa,MAIjB,MAAMqB,GAAsB,CAC1B,GAAaC,YACb,GAAaC,YACb,GAAaC,cACb,GAAaC,aACb,GAAaC,aACb,GAAaC,YACb,GAAaC,cACb,GAAaC,cACb,GAAaC,cAEfT,GAAoBrQ,QAAQ,CAACwK,EAA4BgE,KACvDb,GAAgB3T,KAAK,CACnBwQ,eACAiE,SAAU,GAASpB,IACnBvL,OAAQ,IACR4M,gBAAiB,EACjBC,MAAO,EACPC,OAAQ,KACRzE,UAAW,mBACXE,UAAW,WAAawE,OAAOrE,GAAgB,IAAM,gBACrDF,WAAY,WAAauE,OAAOrE,GAAgB,IAAM,mBACtDsE,SAAU,EACVC,UAAWnB,GAAapD,GACxBwE,aAAa,MAIF,U,0OCpKf,MAAM,GAGJ,wEAFA,gBAA4B,IAAItF,IAG9B,GAAgB1J,QAAQ+Q,IACtB,GAAA9T,KAAA,QAA+BmM,IAAI2H,EAAWvG,aAAcuG,KAIhE,kBAAkB1V,GAChB,OAAO,GAAA4B,KAAA,QAA+BtB,IAAIN,IAI/B,WAAI,GClBJ,itCCIA,IACb,YAAY2V,EAAqBC,EAAsBnC,EAAW,GAChE,MAAMjJ,EAAW,IAAI,OAAqB,CACxCwE,UAAW,IAAI,QACfc,IAAK,IAAI,QACT+F,UAAW,EACXC,UAAW,IACXC,OAAQ,GAAarE,WAAW,UAChCsE,gBAAiB,GACjBC,cAAc,EACdnK,MAAO,WAsGT,OAnGAtB,EAASwE,UAAY,GAAa0C,WAAWiE,GAC7CnL,EAASsF,IAAM,GAAa4B,WAAWkE,GACvCpL,EAASsC,SAASa,OAAS,CACzBrI,SAAU,CACRsI,cAAe,CAAElN,MAAO,GACxBwV,WAAY,CAAExV,MAAO,IAAI,UAGzB+S,EAAW,IACbjJ,EAASrC,QAAQ,eAAiB,IAEpCqC,EAAS2L,gBAAkBxI,IACzBA,EAAOrI,SAASmO,SAAW,CAAE/S,MAAO,IAAI,OAAM+S,IAC9C9F,EAAOrI,SAAS4Q,WAAa1L,EAASsC,SAASa,OAAOrI,SAAS4Q,WAC/DvI,EAAOrI,SAAS8Q,mBAAqB,CAAE1V,MAAO,GAAagR,WAAW,eACtE/D,EAAOrI,SAASsI,cAAgB,CAAElN,MAAO,GAGzCiN,EAAOvH,eAAiBuH,EAAOvH,eAE5BiQ,QACC,wBACA,2mBAiBDA,QAAQ,2CAA4CC,IAEpDD,QACC,4BACA,qnCA2BDA,QACC,mCACA,8EAKDA,QACC,6EACA,oMAMDA,QACC,6BACA,kRASJ7L,EAASsC,SAASa,OAASA,GAGtBnD,I,oSCzGX,MAAM,GAOJ,4LANA,KAAA+L,UAA0C,IAAIlI,IAI9C,gBAA+B,GA2IvB,KAAAmI,mBAAsBC,IACxBA,EACF,aAAOC,MAAK,GAEZ,aAAOA,MAAK,IA5Id,aAAOC,OAAO,IAGM,uBAACC,EAAY9G,GAEjClO,KAAK2U,UAAUxI,IAAI6I,EAAI9G,GAGzB,mBAAmB8G,GAEjBhV,KAAK2U,UAAUnF,OAAOwF,GAGxB,eAAeC,EAAYF,GACA,YAArB,aAAOG,IAAIzM,OACbwM,EAAKF,OAAOA,GAIhB,eAAeI,GACT,GAAAnV,KAAA,QAAwBoV,KAAK,MAAQD,EAAIC,KAAK,MAGlD,GAAApV,KAAA,QAA0BmV,EAAIE,SAE9B,GAAIrV,KAAJ,SACE,GAAAA,KAAA,QAAuBsV,IAAI,QAC3B,GAAAtV,KAAA,QAAuB0C,KAAK,OAAQ,KAC9ByS,EAAI1Y,OAAS,GACf,GAAAuD,KAAA,QAAyBA,KAAKuV,KAAKJ,EAAI,IACvC,GAAAnV,KAAA,QAAuBwV,KAAK,EAAG,GAAAxV,KAAA,QAAuB+U,SAAU,MAEhE,GAAA/U,KAAA,aAAyB4C,IAG7B,GAAA5C,KAAA,QAAuBwV,KAAK,GAAAxV,KAAA,QAAuB+U,SAAU,EAAG,MAE5DI,EAAI1Y,OAAS,IACf,GAAAuD,KAAA,QAAyBA,KAAKuV,KAAKJ,EAAI,IACvC,GAAAnV,KAAA,QAAuBwV,KAAK,EAAG,GAAAxV,KAAA,QAAuB+U,SAAU,MAIpE,GAAI/U,KAAJ,SACE,GAAAA,KAAA,QAAuBsV,IAAI,QAC3B,GAAAtV,KAAA,QAAuB0C,KAAK,OAAQ,KAC9ByS,EAAI1Y,OAAS,GACf,GAAAuD,KAAA,QAAyBA,KAAKuV,KAAKJ,EAAI,IACvC,GAAAnV,KAAA,QAAuBwV,KAAK,EAAG,GAAAxV,KAAA,QAAuB+U,SAAU,MAEhE,GAAA/U,KAAA,aAAyB4C,IAG7B,GAAA5C,KAAA,QAAuBwV,KAAK,GAAAxV,KAAA,QAAuB+U,SAAU,EAAG,MAE5DI,EAAI1Y,OAAS,IACf,GAAAuD,KAAA,QAAyBA,KAAKuV,KAAKJ,EAAI,IACvC,GAAAnV,KAAA,QAAuBwV,KAAK,EAAG,GAAAxV,KAAA,QAAuB+U,SAAU,OAKtE,KAAKC,EAAYS,EAAO,GACtB,IAAIC,EAAW,UAAUV,QACrBW,GAAO,EACPZ,EAAS,EACb,MAAMa,EAAe5V,KAAK6V,WAAWb,GACjCY,GACFF,EAAW,UAAUE,EAAaE,WAC9BF,EAAaD,OACfA,GAAO,GAGLC,EAAab,SACfA,EAASa,EAAab,QAGpBa,EAAaG,eACfhB,GAAU,EAAIpP,KAAKqQ,SAAWJ,EAAaG,cAG7ChB,EAAS,OAAUkB,MAAMlB,EAAQ,EAAG,IAEpC9N,QAAQiP,IAAI,2BAA6BlB,GAG3C,MAAM9I,EAAI,IAAI,WAAK,CACjBiK,IAAKT,EACLD,KAAMA,EACNE,OACAZ,OAAQA,IAKV,OAFA7I,EAAEqJ,OAEKrJ,EAGT,UAAU8I,GACR,IAAIU,EAAW,UAAUV,QAErBD,EAAS,EAEb,MAAMa,EAAe5V,KAAK6V,WAAWb,GACjCY,GACFF,EAAW,UAAUE,EAAaE,WAE9BF,EAAab,SACfA,EAASa,EAAab,SAGxB9N,QAAQiP,IAAI,2BAA6BlB,GAG3C,MAAM9I,EAAI,IAAI,WAAK,CACjBiK,IAAKT,EACLC,MAAM,EACNZ,OAAQA,IAKV,OAFA7I,EAAEqJ,OAEKrJ,EAGD,WAAW8I,GACjB,IAAIoB,OAAYxT,EAOhB,OANA5C,KAAK2U,UAAU5R,QAASjE,IACtB,MAAMuX,EAAavX,EAAM+D,KAAKmC,GAAKA,EAAEgQ,KAAOA,GACxCqB,IACFD,EAAYC,KAGTD,GAYI,WAAI,G,4NCpKnB,MAAME,GAIJ,wEAHA,gBAEI,GAEF,IAAIC,EAAQ5W,OAAO6W,SAASC,KAAKC,UAAU/W,OAAO6W,SAASC,KAAKE,QAAQ,KAAO,EAAGhX,OAAO6W,SAASC,KAAKha,SAE3E,IAAxB8Z,EAAMI,QAAQ,OAChBJ,EAAQA,EAAMG,UAAU,EAAGH,EAAMI,QAAQ,OAG3C,MAAMC,EAAOL,EAAMM,MAAM,KACzB,IAAK,IAAIta,EAAI,EAAGA,EAAIqa,EAAKna,OAAQF,IAAK,CACpC,MAAMua,EAAOF,EAAKra,GAAGsa,MAAM,KACrBzX,EAAM2X,mBAAmBD,EAAK,IAC9BE,EAAMD,mBAAmBD,EAAK,IACpC,GAAA9W,KAAA,QAAiBZ,GAAO4X,IAAO,GAInC,IAAIhC,GACF,OAAO,GAAAhV,KAAA,QAAiBgV,IAIb,WAAIsB,GCFnB,MAAMW,GAAS,GACTC,GAAQvR,KAAKwR,IAAIF,GAAQ,GACzBG,GAAQ,IAAI,OACZC,GAAuB,GAC7B,IAAK,IAAI9F,GAAQ,EAAGA,GAAQ2F,GAAO3F,KACjC8F,GAAWta,KAAK4I,KAAKqQ,UACrBqB,GAAWta,KAAK4I,KAAKqQ,UACrBqB,GAAWta,KAAK4I,KAAKqQ,UAGT,MAAO,GAYnB,cAXQ,KAAAsB,SAAU,EACV,KAAAC,MAAQ,IAAI,OACZ,KAAAlT,KAAO,EAKP,KAAAmT,kBAAmB,EAgGnB,KAAAC,SAAW,KACbzX,KAAKsX,SACPI,sBAAsB1X,KAAKyX,UAG7B,IAAIjM,EAAQxL,KAAKuX,MAAMI,WAEnBnM,EAAQ,OACVA,EAAQ,MAGVxL,KAAKqE,MAAQmH,EACbxL,KAAK4X,OAAO5X,KAAKqE,KAAMmH,IA4BzB,KAAAqM,OAAS,KACP,MAAM3U,EAAO,EAAWA,KACxBlD,KAAKiI,SAASD,QAAQ9E,EAAKlC,MAAOkC,EAAKjC,QAEvCjB,KAAK8X,kBAAkBD,SAEvB,MAAME,EAA0B/X,KAAK8K,OACrCiN,EAAwBC,OAAS9U,EAAKlC,MAAQkC,EAAKjC,OACnD8W,EAAwBE,0BA3IxBjY,KAAKiI,SAAW,EAAe2E,cAC/B5M,KAAK8X,kBAAoB,IAAI,GAAkB9X,KAAKiI,UACpDjI,KAAK6K,MAAQ,IAAI,QACjB7K,KAAK6K,MAAMqN,WAAa,IAAI,OAAM,GAClClY,KAAK6K,MAAMsN,IAAM,IAAI,OAAI,EAAU,EAAG,IACtCnY,KAAK8K,OAAS,IAAI,QAAkB,GAAInL,OAAOwD,WAAaxD,OAAOyD,YAAa,GAAK,IACrFpD,KAAK8X,kBAAkBM,kBAAkBpY,KAAK6K,MAAO7K,KAAK8K,QAC1D9K,KAAK8X,kBAAkBrM,kBAEvBzL,KAAK8K,OAAOjK,SAASwX,EAAI,EACzBrY,KAAK8K,OAAOjK,SAASoE,EAAI,EACzBjF,KAAK8K,OAAOwN,SAAStT,GAAK,GAE1B,MAAMuT,EAAQ,IAAI,QAAW,SAAU,GACvCA,EAAM1X,SAASsL,IAAI,EAAG,GAAI,GAC1BnM,KAAKuY,MAAQA,EAGb,MAAMna,EAAImY,GAAM7X,IAAI,KACpB,IAAI8Z,EACJ,GAAIpa,EAAG,CACL,IAAIqa,EAAYC,SAASta,GACrBqa,EAAY,IACdA,EAAY,IACHA,EAAY,MACrBA,EAAY,KAEdD,EAASC,OAETD,EAAS,GAAalH,IAGxB,MAAMwC,EAAa,GAAY6E,kBAAkBH,GACjD,GAAaI,eAAe9E,GAAYjG,KAAK,KAC3C,MAAMoC,EAAQ,GAAa4I,SAAS/E,EAAW5G,WAE/ClN,KAAK8Y,YAAY7I,EAAO6D,GAExB9T,KAAKyX,aAGP,GAAYsB,eAAe,CAAC,mBAE5B,EAAW/V,SAASgW,IAAIhZ,KAAK6X,QAC7B7X,KAAK6X,SAGC,YAAY5H,EAAiB6D,GACnC,MAAMmF,EAAahJ,EAAM5J,QAAQ0E,SAASmO,OAAQlU,GAA2B,SAAXA,EAAE/C,MAAiB,GAC/E6J,EAAM,GAAaqN,YAAYrF,EAAW1G,UAAW0G,EAAWzG,WAAYyG,EAAWjC,UACvFuH,EAAMH,EAAWI,SACvBD,EAAIE,MAAM,GAAI,GAAI,IAClB,MAAMC,EAAW,IAAI,OAAcN,EAAWI,SAAUvN,EAAKoL,IAE7DqC,EAASC,YAAa,EACtBD,EAASE,eAAgB,EACzBF,EAASrO,SAASE,aAAc,EAOhCpL,KAAK6K,MAAMmO,IAAIO,GAEfA,EAAS3Q,SAAWkD,EACpB9L,KAAK0Z,MAAQH,EAEb,IAAIhd,EAAI,EACR,MAAMod,GAAU1C,GAAS,GAAK,EAE9B,IAAK,IAAIjS,EAAI,EAAGA,EAAIiS,GAAQjS,IAAK,CAC/B,MAAM4U,EAAyB,GAAhBjU,KAAKqQ,SACpB,IAAK,IAAI/Q,EAAI,EAAGA,EAAI2U,EAAQ3U,IAC1B,IAAK,IAAIoT,EAAI,EAAGA,EAAIpB,GAAQoB,IAC1BjB,GAAMvW,SAASmE,EAAmB,IAAd2U,EAAS3U,GAAYqT,EAAI,EAC7CjB,GAAMvW,SAASoE,EAAoB,MAAd0U,EAAS1U,GAAY,EAC1CmS,GAAMvW,SAASwX,EAAmB,IAAdsB,EAAStB,GAG7BjB,GAAMkB,SAASrT,EAAIU,KAAKwR,IAAIlS,EAAI2U,EAAQ,GAAKjU,KAAKqQ,SAAW,EAG7DoB,GAAMyC,eAEN7Z,KAAK0Z,MAAMI,YAAYvd,IAAK6a,GAAM2C,SAqB1C,OAAO1V,EAAcmH,GACfxL,KAAK0Z,QACP1Z,KAAK0Z,MAAMpB,SAASrT,GAAK,KAEzBjF,KAAK8K,OAAOjK,SAASoE,EAAIU,KAAKqU,IAAa,GAAP3V,EAAc,GAAMsB,KAAKsU,GAAK,MAAQ,EAK1Eja,KAAK0Z,MAAMQ,eAAerT,aAAc,GAEtC,EAAesT,gBACbna,KAAKwX,mBACPxX,KAAKwX,kBAAmB,GAG1BxX,KAAK8X,kBAAkBhY,OAAOuE,EAAMmH,IAEpCxL,KAAKiI,SAASnI,OAAOE,KAAK6K,MAAO7K,KAAK8K,QAIxC9K,KAAKiI,SAASvG,KAAK0Y,SCnKvB,IAAIC,GAGiB,GAArB,cAA+C,OAC7C,UAEMra,KAAKsa,MAAMC,sBACXva,KAAKsa,MAAMC,qBAAqCC,YAAY,EAAe/Z,IAG/E4Z,GAAa,IAAI,KAPA,GAAiB,gBADrC,QACoB,cCduX,M,yBCQxYI,GAAY,gBACd,GACA,EACA,GACA,EACA,KACA,WACA,MAIa,GAAAA,G,QCkDf,IAAqB,GAArB,cAAiC,SAAZ,GAAG,gBALvB,eAAU,CACTC,WAAY,CACVC,kBAAA,OAGiB,cCrEuV,MCQxW,I,UAAY,gBACd,GACA7a,EACAS,GACA,EACA,KACA,KACA,OAIa,M,qBCZf,KAAMqa,UAEN,OAAIC,OAAOC,eAAgB,EAE3B,MAAMC,GAAOC,gBACL,EAAWD,aACX,GAAaA,aACb,GAAYE,iBAAiB,QAAS,IAK5C,IAAI,OAAI,CACNxa,GAAI,OACJX,OAAQoM,GAAKA,EAAE,OAInB6O","file":"js/app.a2c3da6f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExperimentWrapper.vue?vue&type=style&index=0&id=ac450e50&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('ExperimentWrapper'),_c('div',{staticClass:\"Logo\"},[_c('svg',{attrs:{\"width\":\"87\",\"height\":\"62\",\"viewBox\":\"0 0 67 42\",\"fill\":\"none\",\"xmlns\":\"http://www.w3.org/2000/svg\"}},[_c('path',{attrs:{\"d\":\"M1.81151 19.2159H0V18.6477H1.81151V14.5759L7.93726 13.1239V18.6477H15.6448V19.2159H7.93726V29.8531C7.93726 31.7153 8.23369 32.7254 9.38646 32.7254C10.5946 32.7254 11.0008 31.3367 11.2972 29.1903L11.8571 29.2534C11.5607 31.7153 10.8965 33.988 7.41049 33.988C4.14978 33.988 1.81151 33.0728 1.81151 29.1587V28.3376V19.2159Z\",\"fill\":\"#FFFAEB\"}}),_c('path',{attrs:{\"d\":\"M19.6367 30.9583C19.6367 37.5235 17.5288 41.5637 11.6995 41.5637C7.71417 41.5637 6.42987 39.67 6.42987 38.0603C6.42987 36.1664 7.81298 35.2194 9.45981 35.2194C11.2054 35.2194 11.9957 36.2927 11.9957 37.65C11.9957 38.0917 11.8971 38.597 11.7983 38.9757H10.5467C9.78917 40.1119 10.5467 41.0273 11.6663 41.0273C13.1485 41.0273 13.511 39.9856 13.511 35.4404V19.2162H11.3701V18.648H19.6367V30.9583Z\",\"fill\":\"#FFFAEB\"}}),_c('path',{attrs:{\"d\":\"M28.7689 18.6474V33.1039H33.9935V33.6721H20.8317V33.1039H22.6432V19.2156H18.184V18.6474H28.7689Z\",\"fill\":\"#FFFAEB\"}}),_c('path',{attrs:{\"d\":\"M38.5137 18.6474V21.5515C39.0734 19.9732 40.1606 18.3318 43.4213 18.3318C46.4842 18.3318 48.526 19.7838 48.526 23.6033V33.1039H53.1916V33.6721H41.0496V33.1039H42.4V22.8455C42.4 20.1626 42.0046 19.8469 41.1812 19.8469C39.7983 19.8469 38.5137 21.8354 38.5137 24.3922V33.1039H39.9298V33.6721H30.5763V33.1039H32.3878V19.2156H30.5763V18.6474H38.5137Z\",\"fill\":\"#FFFAEB\"}}),_c('path',{attrs:{\"d\":\"M55.2455 24.6135C55.2455 27.5805 55.8056 28.2434 56.7937 28.2434C57.6828 28.2434 58.2427 27.7383 58.2427 24.4557V22.9089C58.2427 19.3738 57.7157 18.9003 56.8267 18.9003C55.9042 18.9003 55.2455 19.4685 55.2455 22.9089V24.6135ZM63.1503 16.4697C63.2489 15.9647 63.0512 15.4912 62.3593 15.4912C61.9314 15.4912 60.9433 15.6175 60.9433 17.5745C60.9433 18.0796 61.0094 18.7109 61.1741 19.4685C62.4586 20.289 63.6768 21.3938 63.6768 23.4771C63.6768 27.0754 60.9765 28.8747 56.9584 28.8747C56.0033 28.8747 54.9822 28.7482 54.2903 28.6221C53.1376 29.3166 52.8414 29.6638 52.8414 29.9479C52.8414 30.2318 53.2037 30.3896 54.9491 30.3896H58.3084C62.03 30.3896 65.7847 31.2419 65.7847 35.5346C65.7847 39.0384 63.1503 41.5635 56.4973 41.5635C50.7666 41.5635 48.3622 40.2379 48.3622 38.1862C48.3622 36.6079 49.7453 35.9765 50.8981 35.6609L52.8743 36.5132C52.6767 37.2076 52.611 37.7442 52.611 38.2493C52.611 39.575 53.3022 40.9637 56.8267 40.9637C60.3177 40.9637 62.1622 39.6066 62.1622 37.618C62.1622 36.103 61.4373 35.5031 57.979 35.5031H54.7844C50.8652 35.5031 49.8114 33.9563 49.8114 32.5677C49.8114 30.7684 50.9971 29.8848 53.5662 28.4012C50.9971 27.7067 49.7453 26.2231 49.7453 23.6034C49.7453 20.6364 51.8862 18.3319 56.8594 18.3319C58.4731 18.3319 59.4287 18.5531 60.5153 19.1211C60.3836 18.5531 60.3177 18.048 60.3177 17.5745C60.3177 14.9862 62.1947 14.2286 63.5453 14.2286C65.0935 14.2286 66.2131 15.0495 66.2131 16.5644C66.2131 18.0165 65.225 18.6476 64.1379 18.6476C63.1503 18.6476 62.2939 18.0796 62.2278 17.0064L63.1503 16.4697Z\",\"fill\":\"#FFFAEB\"}}),_c('path',{attrs:{\"d\":\"M26.8828 7.73424C26.8828 11.5697 23.6388 14.6787 19.6367 14.6787C15.6347 14.6787 12.3907 11.5697 12.3907 7.73424C12.3907 3.89879 15.6347 0.789772 19.6367 0.789772C23.6388 0.789772 26.8828 3.89879 26.8828 7.73424Z\",\"fill\":\"#FFFAEB\"}}),_c('path',{attrs:{\"d\":\"M21.7941 33.3037L22.7554 33.1894V19.0759L20.4632 18.9793C19.2024 18.9261 20.5334 18.857 23.4209 18.8256L28.6709 18.7686V33.2254H32.5159V19.088L31.5547 18.9737C31.026 18.9108 32.357 18.8389 34.5124 18.814L38.4313 18.7686L38.458 20.2568C38.4727 21.0753 38.462 24.3187 38.4343 27.4642L38.3839 33.1833L39.221 33.3036C39.6814 33.3698 35.7323 33.4226 30.4454 33.421C25.1584 33.4194 21.2653 33.3667 21.7939 33.3038L21.7941 33.3037Z\",\"fill\":\"#FFFAEB\"}}),_c('path',{attrs:{\"d\":\"M16.5457 13.7565C11.5867 11.3157 11.1994 4.87106 15.8419 2.04939C19.3195 -0.0642502 23.8007 1.01786 25.7948 4.45281C26.5262 5.7127 26.6083 6.11159 26.5337 8.04405C26.4608 9.93531 26.3334 10.3768 25.5545 11.4389C24.2353 13.2379 22.2233 14.3274 19.9877 14.4536C18.4486 14.5405 17.9218 14.4338 16.5457 13.7565L16.5457 13.7565Z\",\"fill\":\"#FFFAEB\"}}),_c('path',{attrs:{\"d\":\"M4.87296 33.5987C3.82785 33.3187 2.9969 32.6399 2.51998 31.6766C2.13897 30.9071 2.05083 29.6356 2.05083 24.908V19.0869L0.128326 18.8583L2.05083 18.7675V14.6192L4.19516 14.1344C5.37457 13.8678 6.63905 13.5745 7.00498 13.4826C7.66089 13.3179 7.67048 13.3546 7.67048 16.0281V18.7405L11.3676 18.9418L7.60625 19.051L7.71232 25.3992C7.8096 31.2207 7.86641 31.7982 8.39698 32.3601C8.82156 32.8097 9.17578 32.9259 9.72792 32.7964C10.447 32.6277 10.4573 32.6423 9.96174 33.1254C9.58185 33.4957 8.90955 33.6473 7.4477 33.6923C6.35015 33.726 5.19155 33.6838 4.87288 33.5985L4.87296 33.5987Z\",\"fill\":\"#FFFAEB\",\"stroke\":\"#FFFAEB\",\"stroke-width\":\"0.475195\"}}),_c('path',{attrs:{\"d\":\"M52.2505 41.064C51.3108 40.8603 50.1794 40.435 49.7364 40.1188C48.0725 38.9316 48.1746 37.0882 49.9532 36.2067C50.7643 35.8048 50.9401 35.8036 51.7298 36.195C52.5112 36.5823 52.6034 36.7671 52.5797 37.8981C52.5437 39.6178 53.1697 40.4434 54.81 40.8393C56.5794 41.2663 57.5492 41.2451 59.3205 40.741C61.0892 40.2376 62.0555 39.3328 62.2876 37.9627C62.4271 37.139 62.3254 36.8228 61.7412 36.2629C61.067 35.6168 60.7721 35.5664 56.886 35.4324C52.6585 35.2867 50.8188 34.8523 50.4418 33.9109C50.3127 33.5883 49.3464 33.4991 45.6127 33.4651C43.0454 33.4417 41.311 33.3695 41.7583 33.3045L42.5717 33.1864L42.5673 27.1817C42.5628 21.0032 42.3782 19.8681 41.3466 19.6777C41.0877 19.6299 40.4588 19.9272 39.9491 20.3382C38.9223 21.1662 38.7848 21.0792 39.49 20.0477C40.5664 18.4733 44.6174 18.0053 46.3648 19.2536C48.1602 20.536 48.33 21.2094 48.4395 27.484L48.5397 33.2243H49.2529C49.8567 33.2243 49.966 33.0864 49.966 32.3253C49.966 31.6293 50.2678 31.1491 51.3022 30.1993C52.7219 28.8956 53.4576 28.5833 52.9446 29.502C52.7819 29.7933 52.7329 30.1122 52.8356 30.2106C52.9383 30.3091 54.0982 30.3952 55.4132 30.4021C58.9598 30.4205 61.9244 30.8176 63.1892 31.4435C65.4346 32.5548 66.2767 35.4742 65.0514 37.8998C64.3786 39.2318 63.2203 40.1489 61.4162 40.7781C59.72 41.3697 54.4221 41.5352 52.2505 41.0644L52.2505 41.064Z\",\"fill\":\"#FFFAEB\"}}),_c('path',{attrs:{\"d\":\"M53.395 28.583C53.4918 28.3412 53.2897 28.1298 52.8636 28.0273C52.4855 27.9364 51.7122 27.4033 51.1454 26.8428C50.1576 25.8661 50.1146 25.7364 50.1146 23.7342C50.1146 21.2821 50.5946 20.4483 52.6351 19.3565C54.2992 18.4659 57.8619 18.2043 59.4832 18.8536L60.5655 19.2869L60.5509 17.7329C60.5429 16.8782 60.66 16.0604 60.8112 15.9155C60.9806 15.7532 61.0407 16.3353 60.9679 17.4314C60.8511 19.1887 60.8644 19.2248 62.0385 20.3501C63.8395 22.0762 64.0546 24.391 62.6038 26.4366C61.5088 27.9807 59.9995 28.5424 56.8287 28.5858C55.3159 28.6065 53.996 28.7022 53.8956 28.7984C53.5614 29.1186 53.2364 28.9789 53.3949 28.5831L53.395 28.583ZM57.7879 27.7763C58.4524 26.8671 58.4524 20.3076 57.7879 19.3984C57.1699 18.5527 56.3043 18.6034 55.6762 19.5221C54.9173 20.6321 54.9107 26.5308 55.6671 27.6383C56.3034 28.5699 57.1668 28.626 57.7879 27.7762L57.7879 27.7763Z\",\"fill\":\"#FFFAEB\"}}),_c('path',{attrs:{\"d\":\"M62.8082 17.8914C62.2677 17.319 62.267 17.286 62.7884 16.9207C63.6474 16.3187 63.2856 15.507 62.1595 15.5103C61.0093 15.5136 60.9524 15.308 61.9604 14.791C62.9805 14.2678 64.6655 14.35 65.3654 14.957C66.1185 15.6102 66.1368 17.3732 65.3972 18.0148C64.6544 18.659 63.4803 18.603 62.8082 17.8914L62.8082 17.8914Z\",\"fill\":\"#FFFAEB\"}})])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ExperimentWrapper\"},[_c('div',{ref:\"threeTargetContainer\",staticClass:\"threeTargetContainer\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { LinearEncoding, NoToneMapping, PCFSoftShadowMap, sRGBEncoding, WebGLRenderer } from 'three'\n\nclass GlobalRenderer {\n  el: HTMLCanvasElement\n  #renderer: WebGLRenderer\n  #usePostEffects = true\n\n  constructor() {\n    this.el = document.createElement('canvas')\n    this.el.style.position = 'absolute'\n    this.el.style.top = '0px'\n    this.el.style.left = '0px'\n    this.el.style.width = '100%'\n    this.el.style.height = '100%'\n\n    // if (Detector.isRetina && Detector.isDesktop) {\n    // antialias = false\n    // }\n\n    // if (Detector.isMobile) {\n    //  antialias = false\n    //  useShadows = false\n    // }\n\n    // if (window.INTERLAND.quality === QUALITY_LOW) {\n    //  antialias = false\n    // }\n\n    this.#renderer = new WebGLRenderer({\n      canvas: this.el,\n      antialias: false,\n      alpha: true,\n      stencil: true,\n      preserveDrawingBuffer: false,\n      powerPreference: 'high-performance'\n    })\n\n    this.#renderer.autoClear = this.#usePostEffects ? false : true\n    this.#renderer.outputEncoding = this.#usePostEffects ? LinearEncoding : sRGBEncoding\n\n    this.#renderer.info.autoReset = false\n    this.#renderer.setClearColor(0x000000)\n    this.#renderer.setClearAlpha(1)\n    this.#renderer.toneMapping = NoToneMapping\n    this.#renderer.shadowMap.enabled = true\n    this.#renderer.shadowMap.type = PCFSoftShadowMap\n\n    this.#renderer.setPixelRatio(window.devicePixelRatio)\n\n    this.el.addEventListener(\n      'webglcontextlost',\n      e => {\n        e.preventDefault()\n        /*const extension = this.#renderer.extensions.get('WEBGL_lose_context')\n        if (extension) {\n          try {\n            extension.restoreContext()\n          } catch (err: any) {\n            console.log('hard reload')\n          }\n        }*/\n      },\n      false\n    )\n\n    //this.resize(this.#size)\n  }\n\n  get usePostEffects() {\n    return this.#usePostEffects\n  }\n\n  set usePostEffects(value: boolean) {\n    this.#usePostEffects = value\n    this.#renderer.autoClear = this.#usePostEffects ? false : true\n    this.#renderer.outputEncoding = this.#usePostEffects ? LinearEncoding : sRGBEncoding\n  }\n\n  getRenderer() {\n    return this.#renderer\n  }\n\n  /*resize() {\n    sizeSystem.size\n    this.#size = Object.assign(this.#size, size)\n\n    this.#renderer.setSize(this.#size.width / this.#size.sizeRatio, this.#size.height / this.#size.sizeRatio)\n\n    if (this.#size.sizeRatio > 1) {\n      this.#renderer.domElement.style.transform =\n        'scale3d(' + this.#size.sizeRatio + ', ' + this.#size.sizeRatio + ', 1)'\n      this.#renderer.domElement.style.transformOrigin = '0 0 0'\n      this.#renderer.domElement.style.webkitTransform =\n        'scale3d(' + this.#size.sizeRatio + ', ' + this.#size.sizeRatio + ', 1)'\n      this.#renderer.domElement.style.webkitTransformOrigin = '0 0 0'\n    }\n  }*/\n}\n\nexport default new GlobalRenderer()\n","export default class Action<T> {\n  private earlyDelegates: ((data: T) => void)[] = []\n  private delegates: ((data: T) => void)[] = []\n  private once: ((data: T) => void)[] = []\n\n  addEarly(delegate: (data: T) => void): Action<T> {\n    if (this.earlyDelegates.find(d => d === delegate) === undefined) {\n      this.earlyDelegates.push(delegate)\n    }\n    return this\n  }\n\n  add(delegate: (data: T) => void): Action<T> {\n    if (this.delegates.find(d => d === delegate) === undefined) {\n      this.delegates.push(delegate)\n    }\n    return this\n  }\n\n  addOnce(delegate: (data: T) => void) {\n    if (this.once.find(d => d === delegate) === undefined) {\n      this.once.push(delegate)\n    }\n    return this\n  }\n\n  remove(delegate: (data: T) => void) {\n    let i = this.earlyDelegates.findIndex(d => d === delegate)\n    if (i !== -1) {\n      this.earlyDelegates.splice(i, 1)\n    }\n\n    i = this.delegates.findIndex(d => d === delegate)\n    if (i !== -1) {\n      this.delegates.splice(i, 1)\n    }\n\n    i = this.once.findIndex(d => d === delegate)\n    if (i !== -1) {\n      this.once.splice(i, 1)\n    }\n  }\n\n  removeAll() {\n    this.earlyDelegates.length = 0\n    this.delegates.length = 0\n    this.once.length = 0\n  }\n\n  invoke(data: T) {\n    this.earlyDelegates.forEach(delegate => {\n      delegate(data)\n    })\n\n    this.delegates.forEach(delegate => {\n      delegate(data)\n    })\n\n    if (this.once.length > 0) {\n      this.once.forEach(delegate => {\n        delegate(data)\n      })\n      this.once.length = 0\n    }\n  }\n}\n","import Action from './common/action'\n\nexport interface Size {\n  width: number\n  height: number\n  sizeRatio: number\n}\n\nclass SizeSystem {\n  onResize = new Action<Size | undefined>()\n  isSSR = typeof window === 'undefined'\n  size = {\n    width: !this.isSSR ? window.innerWidth : 1,\n    height: !this.isSSR ? window.innerHeight : 1,\n    sizeRatio: 1\n  }\n  #onResizeDebouncedTimeout: ReturnType<typeof setTimeout> | undefined\n\n  constructor() {\n    //render all pixels (highest quality)\n    this.size.sizeRatio = !this.isSSR ? window.devicePixelRatio : 1\n\n    //render enough pixels (highest performance)\n    //this.size.sizeRatio = 1\n\n    //conditional rendering\n    /*if (!this.isSSR && isDesktop) {\n      //render less pixels on mobile and ipad\n      this.size.sizeRatio = window.devicePixelRatio\n    }*/\n  }\n\n  async init() {\n    if (!this.isSSR) {\n      window.addEventListener('resize', this.resizeHandler)\n      this.resizeHandler()\n    }\n  }\n\n  resizeHandler = () => {\n    if (this.size.width !== window.innerWidth || this.size.height !== window.innerHeight) {\n      this.size.width = window.innerWidth\n      this.size.height = window.innerHeight\n\n      if (this.#onResizeDebouncedTimeout) {\n        window.clearTimeout(this.#onResizeDebouncedTimeout)\n      }\n\n      this.#onResizeDebouncedTimeout = setTimeout(() => {\n        if (this.size.width !== window.innerWidth || this.size.height !== window.innerHeight) {\n          this.size.width = window.innerWidth\n          this.size.height = window.innerHeight\n          this.onResize.invoke(this.size)\n        }\n      }, 500)\n\n      this.onResize.invoke(this.size)\n    }\n  }\n\n  getSize() {\n    return this.size\n  }\n}\n\nexport default new SizeSystem()\n","import { Vector2 } from 'three'\n\nexport default {\n  uniforms: {\n    tPrev: { type: 't', value: 0, texture: null }, // The base scene buffer\n    tDiffuse: { type: 't', value: 0, texture: null }, // The base scene buffer\n    tGlow: { type: 't', value: 1, texture: null }, // The glow scene buffer\n    tBloom: { type: 't', value: 1, texture: null }, // The glow scene buffer\n    bloomAmount: { value: 0 }, // The glow scene buffer\n    distortAmount: { value: 0 }, // The glow scene buffer\n    fadeAmount: { value: 0 },\n    invertAmount: { value: 0 }, // The glow scene buffer\n    resolution: { value: new Vector2(window.innerWidth, window.innerHeight) }, // The glow scene buffer\n    time: { value: 0 }, // The glow scene buffer\n    fxAmount: { value: 0 }\n  },\n\n  vertexShader: `\n    varying vec2 vUv;\n    //varying vec2 screenPosition;\n\n    void main() {\n      \n      vUv = vec2( uv.x, uv.y );\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n    }\n  `,\n\n  fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tBloom;\n    uniform float fxAmount;\n    uniform float bloomAmount;\n    uniform float fadeAmount;\n    uniform float time;\n    uniform vec2 resolution;\n    varying vec2 vUv;\n\n    void main() {\n      \n      vec4 texel = texture2D( tDiffuse, vUv);\n      vec4 bloomFx = texture2D( tBloom, vUv );\n      \n      gl_FragColor = LinearTosRGB(texel + bloomFx*bloomAmount);\n      gl_FragColor = mix(gl_FragColor,vec4(0.0,0.0,0.0,1.0), fadeAmount);\n      \n    }\n  `\n}\n","import { Texture, Vector2 } from 'three'\n\nexport default {\n  uniforms: {\n    tDiffuse: { type: 't', value: new Texture() },\n    resolution: { type: 'v2', value: new Vector2() }\n  },\n\n  vertexShader: `\n    varying vec2 vUv;\n\n    varying vec2 v_rgbNW;\n    varying vec2 v_rgbNE;\n    varying vec2 v_rgbSW;\n    varying vec2 v_rgbSE;\n    varying vec2 v_rgbM;\n\n    uniform vec2 resolution;\n\n    void main() {\n    vUv = uv;\n    vec2 fragCoord = uv * resolution;\n    vec2 inverseVP = 1.0 / resolution.xy;\n    v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\n    v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\n    v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\n    v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\n    v_rgbM = vec2(fragCoord * inverseVP);\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n    }\n  `,\n\n  fragmentShader: `\n    varying vec2 vUv;\n\n    //texcoords computed in vertex step\n    //to avoid dependent texture reads\n    varying vec2 v_rgbNW;\n    varying vec2 v_rgbNE;\n    varying vec2 v_rgbSW;\n    varying vec2 v_rgbSE;\n    varying vec2 v_rgbM;\n\n    //make sure to have a resolution uniform set to the screen size\n    uniform vec2 resolution;\n    uniform sampler2D tDiffuse;\n\n    #ifndef FXAA_REDUCE_MIN\n        #define FXAA_REDUCE_MIN   (1.0/ 128.0)\n    #endif\n    #ifndef FXAA_REDUCE_MUL\n        #define FXAA_REDUCE_MUL   (1.0 / 4.0)\n    #endif\n    #ifndef FXAA_SPAN_MAX\n        #define FXAA_SPAN_MAX     4.0\n    #endif\n\n    //optimized version for mobile, where dependent \n    //texture reads can be a bottleneck\n    vec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\n                vec2 v_rgbNW, vec2 v_rgbNE, \n                vec2 v_rgbSW, vec2 v_rgbSE, \n                vec2 v_rgbM) {\n        vec4 color;\n        mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\n        vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\n        vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\n        vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\n        vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\n        vec4 texColor = texture2D(tex, v_rgbM);\n        vec3 rgbM  = texColor.xyz;\n        vec3 luma = vec3(0.299, 0.587, 0.114);\n        float lumaNW = dot(rgbNW, luma);\n        float lumaNE = dot(rgbNE, luma);\n        float lumaSW = dot(rgbSW, luma);\n        float lumaSE = dot(rgbSE, luma);\n        float lumaM  = dot(rgbM,  luma);\n        float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n        float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n        \n        mediump vec2 dir;\n        dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n        dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n        \n        float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n                              (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n        \n        float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n        dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n                  max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n                  dir * rcpDirMin)) * inverseVP;\n        \n        vec3 rgbA = 0.5 * (\n            texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\n            texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\n        vec3 rgbB = rgbA * 0.5 + 0.25 * (\n            texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\n            texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\n\n        float lumaB = dot(rgbB, luma);\n        if ((lumaB < lumaMin) || (lumaB > lumaMax))\n            color = vec4(rgbA, texColor.a);\n        else\n            color = vec4(rgbB, texColor.a);\n        return color;\n    }\n\n    void main() {\n      vec2 fragCoord = vUv * resolution;   \n      gl_FragColor = fxaa(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n    }\n  `\n}\n","/* eslint-disable */\nimport * as THREE from 'three'\nimport { HalfFloatType, IUniform, LinearFilter, RGBAFormat, Vector2, WebGLRenderer, WebGLRenderTarget } from 'three'\nimport { CopyShader } from 'three/examples/jsm/shaders/CopyShader.js'\nimport { ShaderMaterial } from 'three'\nimport { Vector3 } from 'three'\nimport { UniformsUtils } from 'three'\nimport { AdditiveBlending } from 'three'\nimport { Color } from 'three'\nimport { MeshBasicMaterial } from 'three'\nimport { FullScreenQuad, Pass } from 'three/examples/jsm/postprocessing/Pass'\nimport { LuminosityHighPassShader } from 'three/examples/jsm/shaders/LuminosityHighPassShader'\n\n/**\n * @author spidersharma / http://eduperiment.com/\n *\n * Inspired from Unreal Engine\n * https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\nconst BlurDirectionX = new Vector2(1.0, 0.0)\nconst BlurDirectionY = new Vector2(0.0, 1.0)\n\nexport default class UnrealBloomPass extends Pass {\n  strength: number\n  radius: number\n  threshold: number\n  resolution: Vector2\n  clearColor: Color\n  renderTargetsHorizontal: WebGLRenderTarget[]\n  renderTargetsVertical: WebGLRenderTarget[]\n  nMips: number\n  renderTargetBright: WebGLRenderTarget\n  highPassUniforms: { [uniform: string]: IUniform }\n  copyUniforms: { [uniform: string]: IUniform }\n  materialHighPassFilter: ShaderMaterial\n  separableBlurMaterials: ShaderMaterial[]\n  compositeMaterial: ShaderMaterial\n  materialCopy: ShaderMaterial\n  bloomTintColors: Vector3[]\n  oldClearColor: Color\n  oldClearAlpha: number\n  basic: MeshBasicMaterial\n  fsQuad: FullScreenQuad\n\n  constructor(resolution: { x: number; y: number }, strength: number, radius: number, threshold: number) {\n    super()\n\n    this.strength = strength !== undefined ? strength : 1\n    this.radius = radius\n    this.threshold = threshold\n    this.resolution = resolution !== undefined ? new Vector2(resolution.x, resolution.y) : new Vector2(256, 256)\n\n    // create color only once here, reuse it later inside the render function\n    this.clearColor = new Color(0, 0, 0)\n\n    // render targets\n    let pars = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBAFormat,\n      type: HalfFloatType\n    }\n    this.renderTargetsHorizontal = []\n    this.renderTargetsVertical = []\n    this.nMips = 5\n    let resx = Math.round(this.resolution.x / 2)\n    let resy = Math.round(this.resolution.y / 2)\n\n    this.renderTargetBright = new WebGLRenderTarget(resx, resy, pars)\n    this.renderTargetBright.texture.name = 'UnrealBloomPass.bright'\n    this.renderTargetBright.texture.generateMipmaps = false\n\n    for (let i = 0; i < this.nMips; i++) {\n      let renderTargetHorizonal = new WebGLRenderTarget(resx, resy, pars)\n\n      renderTargetHorizonal.texture.name = 'UnrealBloomPass.h' + i\n      renderTargetHorizonal.texture.generateMipmaps = false\n\n      this.renderTargetsHorizontal.push(renderTargetHorizonal)\n\n      let renderTargetVertical = new WebGLRenderTarget(resx, resy, pars)\n\n      renderTargetVertical.texture.name = 'UnrealBloomPass.v' + i\n      renderTargetVertical.texture.generateMipmaps = false\n\n      this.renderTargetsVertical.push(renderTargetVertical)\n\n      resx = Math.round(resx / 2)\n\n      resy = Math.round(resy / 2)\n    }\n\n    // luminosity high pass material\n    let highPassShader = LuminosityHighPassShader\n    this.highPassUniforms = UniformsUtils.clone(highPassShader.uniforms)\n\n    this.highPassUniforms['luminosityThreshold'].value = threshold\n    this.highPassUniforms['smoothWidth'].value = 0.01\n\n    this.materialHighPassFilter = new ShaderMaterial({\n      uniforms: this.highPassUniforms,\n      vertexShader: highPassShader.vertexShader,\n      fragmentShader: highPassShader.fragmentShader,\n      defines: {}\n    })\n\n    // Gaussian Blur Materials\n    this.separableBlurMaterials = []\n    let kernelSizeArray = [3, 5, 7, 9, 11]\n    resx = Math.round(this.resolution.x / 2)\n    resy = Math.round(this.resolution.y / 2)\n\n    for (let i = 0; i < this.nMips; i++) {\n      this.separableBlurMaterials.push(this.getSeperableBlurMaterial(kernelSizeArray[i]))\n\n      this.separableBlurMaterials[i].uniforms['texSize'].value = new Vector2(resx, resy)\n\n      resx = Math.round(resx / 2)\n\n      resy = Math.round(resy / 2)\n    }\n\n    // Composite material\n    this.compositeMaterial = this.getCompositeMaterial(this.nMips)\n    this.compositeMaterial.uniforms['blurTexture1'].value = this.renderTargetsVertical[0].texture\n    this.compositeMaterial.uniforms['blurTexture2'].value = this.renderTargetsVertical[1].texture\n    this.compositeMaterial.uniforms['blurTexture3'].value = this.renderTargetsVertical[2].texture\n    this.compositeMaterial.uniforms['blurTexture4'].value = this.renderTargetsVertical[3].texture\n    this.compositeMaterial.uniforms['blurTexture5'].value = this.renderTargetsVertical[4].texture\n    this.compositeMaterial.uniforms['bloomStrength'].value = strength\n    this.compositeMaterial.uniforms['bloomRadius'].value = 0.1\n    this.compositeMaterial.needsUpdate = true\n\n    let bloomFactors = [1.0, 0.8, 0.6, 0.4, 0.2] //.map(x => x * 0.8)\n    this.compositeMaterial.uniforms['bloomFactors'].value = bloomFactors\n    this.bloomTintColors = [\n      new Vector3(1, 1, 1),\n      new Vector3(1, 1, 1),\n      new Vector3(1, 1, 1),\n      new Vector3(1, 1, 1),\n      new Vector3(1, 1, 1)\n    ]\n    this.compositeMaterial.uniforms['bloomTintColors'].value = this.bloomTintColors\n\n    // copy material\n    if (CopyShader === undefined) {\n      console.error('UnrealBloomPass relies on CopyShader')\n    }\n\n    let copyShader = CopyShader\n\n    this.copyUniforms = UniformsUtils.clone(copyShader.uniforms)\n    this.copyUniforms['opacity'].value = 1.0\n\n    this.materialCopy = new ShaderMaterial({\n      uniforms: this.copyUniforms,\n      vertexShader: copyShader.vertexShader,\n      fragmentShader: copyShader.fragmentShader,\n      blending: AdditiveBlending,\n      depthTest: false,\n      depthWrite: false,\n      transparent: true\n    })\n\n    this.enabled = true\n    this.needsSwap = false\n\n    this.oldClearColor = new Color()\n    this.oldClearAlpha = 1\n\n    this.basic = new MeshBasicMaterial()\n\n    this.fsQuad = new FullScreenQuad()\n  }\n\n  dispose() {\n    for (let i = 0; i < this.renderTargetsHorizontal.length; i++) {\n      this.renderTargetsHorizontal[i].dispose()\n    }\n\n    for (let i = 0; i < this.renderTargetsVertical.length; i++) {\n      this.renderTargetsVertical[i].dispose()\n    }\n\n    this.renderTargetBright.dispose()\n  }\n\n  setSize(width: number, height: number) {\n    let resx = Math.round(width / 2)\n    let resy = Math.round(height / 2)\n\n    this.renderTargetBright.setSize(resx, resy)\n\n    for (let i = 0; i < this.nMips; i++) {\n      this.renderTargetsHorizontal[i].setSize(resx, resy)\n      this.renderTargetsVertical[i].setSize(resx, resy)\n\n      this.separableBlurMaterials[i].uniforms['texSize'].value = new Vector2(resx, resy)\n\n      resx = Math.round(resx / 2)\n      resy = Math.round(resy / 2)\n    }\n  }\n\n  render(\n    renderer: WebGLRenderer,\n    writeBuffer: WebGLRenderTarget,\n    readBuffer: WebGLRenderTarget,\n    deltaTime: number,\n    maskActive: boolean\n  ) {\n    renderer.getClearColor(this.oldClearColor)\n    this.oldClearAlpha = renderer.getClearAlpha()\n    let oldAutoClear = renderer.autoClear\n    renderer.autoClear = false\n\n    renderer.setClearColor(this.clearColor, 0)\n\n    if (maskActive) renderer.state.buffers.stencil.setTest(false)\n\n    // Render input to screen\n\n    /*if (this.renderToScreen) {\n      this.fsQuad.material = this.basic\n      this.basic.map = readBuffer.texture\n\n      renderer.setRenderTarget(null)\n      renderer.clear()\n      this.fsQuad.render(renderer)\n    }*/\n\n    // 1. Extract Bright Areas\n\n    this.highPassUniforms['tDiffuse'].value = readBuffer.texture\n    this.highPassUniforms['luminosityThreshold'].value = this.threshold\n    this.fsQuad.material = this.materialHighPassFilter\n\n    renderer.setRenderTarget(this.renderTargetBright)\n    renderer.clear()\n    this.fsQuad.render(renderer)\n\n    // 2. Blur All the mips progressively\n\n    let inputRenderTarget = this.renderTargetBright\n\n    for (let i = 0; i < this.nMips; i++) {\n      this.fsQuad.material = this.separableBlurMaterials[i]\n\n      this.separableBlurMaterials[i].uniforms['colorTexture'].value = inputRenderTarget.texture\n      this.separableBlurMaterials[i].uniforms['direction'].value = BlurDirectionX\n      renderer.setRenderTarget(this.renderTargetsHorizontal[i])\n      renderer.clear()\n      this.fsQuad.render(renderer)\n\n      this.separableBlurMaterials[i].uniforms['colorTexture'].value = this.renderTargetsHorizontal[i].texture\n      this.separableBlurMaterials[i].uniforms['direction'].value = BlurDirectionY\n      renderer.setRenderTarget(this.renderTargetsVertical[i])\n      renderer.clear()\n      this.fsQuad.render(renderer)\n\n      inputRenderTarget = this.renderTargetsVertical[i]\n    }\n\n    // Composite All the mips\n\n    this.fsQuad.material = this.compositeMaterial\n    this.compositeMaterial.uniforms['bloomStrength'].value = this.strength\n    this.compositeMaterial.uniforms['bloomRadius'].value = this.radius\n    this.compositeMaterial.uniforms['bloomTintColors'].value = this.bloomTintColors\n\n    renderer.setRenderTarget(this.renderTargetsHorizontal[0])\n    renderer.clear()\n    this.fsQuad.render(renderer)\n\n    // Blend it additively over the input texture\n\n    this.fsQuad.material = this.materialCopy\n    this.copyUniforms['tDiffuse'].value = this.renderTargetsHorizontal[0].texture\n\n    if (maskActive) renderer.state.buffers.stencil.setTest(true)\n\n    /*if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      this.fsQuad.render(renderer)\n    } else {*/\n    renderer.setRenderTarget(readBuffer)\n    this.fsQuad.render(renderer)\n    //}\n\n    // Restore renderer settings\n\n    renderer.setClearColor(this.oldClearColor, this.oldClearAlpha)\n    renderer.autoClear = oldAutoClear\n  }\n\n  getSeperableBlurMaterial(kernelRadius: number) {\n    return new ShaderMaterial({\n      defines: {\n        KERNEL_RADIUS: kernelRadius,\n        SIGMA: kernelRadius\n      },\n\n      uniforms: {\n        colorTexture: { value: null },\n        texSize: { value: new Vector2(0.5, 0.5) },\n        direction: { value: new Vector2(0.5, 0.5) }\n      },\n\n      vertexShader: `\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }\n      `,\n\n      fragmentShader: `\n        #include <common>\n        varying vec2 vUv;\n        uniform sampler2D colorTexture;\n        uniform vec2 texSize;\n        uniform vec2 direction;\n\n        float gaussianPdf(in float x, in float sigma) {\n          return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\n        }\n        void main() {\n          vec2 invSize = 1.0 / texSize;\n          float fSigma = float(SIGMA);\n          float weightSum = gaussianPdf(0.0, fSigma);\n          vec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\n          for( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n            float x = float(i);\n            float w = gaussianPdf(x, fSigma);\n            vec2 uvOffset = direction * invSize * x;\n            vec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\n            vec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\n            diffuseSum += (sample1 + sample2) * w;\n            weightSum += 2.0 * w;\n          }\n          \n          gl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n        }\n      `\n    })\n  }\n\n  getCompositeMaterial(nMips: number) {\n    return new ShaderMaterial({\n      defines: {\n        NUM_MIPS: nMips\n      },\n\n      uniforms: {\n        blurTexture1: { value: null },\n        blurTexture2: { value: null },\n        blurTexture3: { value: null },\n        blurTexture4: { value: null },\n        blurTexture5: { value: null },\n        dirtTexture: { value: null },\n        bloomStrength: { value: 1.0 },\n        bloomFactors: { value: null },\n        bloomTintColors: { value: null },\n        bloomRadius: { value: 0.0 }\n      },\n\n      vertexShader: `\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }\n      `,\n\n      fragmentShader: `\n        varying vec2 vUv;\n        uniform sampler2D blurTexture1;\n        uniform sampler2D blurTexture2;\n        uniform sampler2D blurTexture3;\n        uniform sampler2D blurTexture4;\n        uniform sampler2D blurTexture5;\n        uniform sampler2D dirtTexture;\n        uniform float bloomStrength;\n        uniform float bloomRadius;\n        uniform float bloomFactors[NUM_MIPS];\n        uniform vec3 bloomTintColors[NUM_MIPS];\n\n        float lerpBloomFactor(const in float factor) {\n          float mirrorFactor = 1.2 - factor;\n          return mix(factor, mirrorFactor, bloomRadius);\n        }\n\n        void main() {\n          gl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n                          lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n                          lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n                          lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n                          lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n        }\n      `\n    })\n  }\n}\n","import * as THREE from 'three'\n\nexport default {\n  uniforms: {\n    tDiffuse: { type: 't', value: 0, texture: null }, // The base scene buffer\n    center: { type: 'v2', value: new THREE.Vector2(0.5, 0.5) },\n    resolution: { type: 'v2', value: new THREE.Vector2(window.innerWidth, window.innerHeight) },\n    strength: { type: 'f', value: 0.1 },\n    mix: { type: 'f', value: 0.3 }\n  },\n\n  vertexShader: `\n    varying vec2 vUv;\n\n    void main() {\n\n    vUv = vec2( uv.x, uv.y );\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n    }\n  `,\n\n  fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform vec2 center;\n    uniform float strength;\n    uniform float mix;\n    uniform vec2 resolution;\n    varying vec2 vUv;\n\n    float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}\n\n    // Gradient noise from Jorge Jimenez's presentation:\n    // http://www.iryoku.com/next-generation-post-processing-in-call-of-duty-advanced-warfare\n    float gradientNoise(vec2 uv)\n    {\n        const vec3 magic = vec3(0.06711056, 0.00583715, 52.9829189);\n        return fract(magic.z * fract(dot(uv, magic.xy)));\n    }\n\n    void main() {\n\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n      vec2 toCenter = ( center - vUv ) * resolution;\n\n      /* randomize the lookup values to hide the fixed number of samples */\n      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n\n      for (float t = 0.0; t <= 40.0; t++) {\n        float percent = (t + offset) / 40.0;\n        float weight = 4.0 * (percent - percent * percent);\n        vec4 texSample = texture2D(tDiffuse, vUv + toCenter * percent / resolution);\n\n        texSample.rgb *= strength;\n        /* switch to pre-multiplied alpha to correctly blur transparent images */\n        texSample.rgb *= texSample.a;\n\n        color += texSample * weight;\n        total += weight;\n      }\n\n      vec4 diffuseColor = texture2D( tDiffuse, vUv );\n\n      gl_FragColor = diffuseColor + color*color / total * mix;\n\n      //gl_FragColor += (1.0/255.0) * gradientNoise(gl_FragCoord.xy) - (0.5/255.0);\n\n      \n\n    }\n  `\n}\n","import sizeSystem from '@/shared/size-system'\nimport {\n  Camera,\n  HalfFloatType,\n  LinearEncoding,\n  LinearFilter,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  RGBAFormat,\n  Scene,\n  ShaderMaterial,\n  Vector2,\n  WebGLRenderer,\n  WebGLRenderTarget\n} from 'three'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\nimport CompositingPass from './shaders/compositing-pass'\nimport FXAAPass from './shaders/fxaa-pass'\n//import { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js'\nimport UnrealBloomPass from './shaders/unreal-bloom-pass'\nimport zoomBlurPass from './shaders/zoom-blur-pass'\n\nconst blackMaterial = new MeshBasicMaterial({ color: 0x000000 })\nconst blackMaterialSkinned = new MeshBasicMaterial({ color: 0x000000 })\n\nexport default class PostEffectManager {\n  #renderer: WebGLRenderer\n  #scene: Scene = {} as Scene\n  #camera: Camera = {} as Camera\n  #bloomAmount: number\n  #bloomProcessObjects: Object3D[] = []\n  #renderTargetBloom: WebGLRenderTarget\n  #renderTargetGeneric: WebGLRenderTarget\n  #bloomComposer: EffectComposer\n  #genericComposer: EffectComposer\n  #bloomPass: UnrealBloomPass\n  #fxaaPass: ShaderPass\n  #zoomBlurPass: ShaderPass\n  #compositingPass: ShaderPass\n  #renderPass: RenderPass\n  #particlesUseBloom = false\n  #fadeAmount = 0\n\n  constructor(renderer: WebGLRenderer) {\n    this.#renderer = renderer\n    this.#bloomAmount = 0\n    // Create your composer and first RenderPass\n\n    this.#renderTargetBloom = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBAFormat,\n      stencilBuffer: true,\n      encoding: LinearEncoding,\n      type: HalfFloatType\n    })\n    this.#renderTargetGeneric = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBAFormat,\n      stencilBuffer: true,\n      encoding: LinearEncoding,\n      type: HalfFloatType\n    })\n\n    this.#bloomComposer = new EffectComposer(this.#renderer, this.#renderTargetBloom)\n    this.#bloomComposer.setPixelRatio(1)\n\n    this.#genericComposer = new EffectComposer(this.#renderer, this.#renderTargetGeneric)\n    this.#genericComposer.setPixelRatio(sizeSystem.size.sizeRatio)\n\n    this.#bloomPass = new UnrealBloomPass(new Vector2(window.innerWidth, window.innerHeight), 0.61, 0.08, 0.06)\n    this.#bloomPass.needsSwap = false\n    this.#bloomPass.threshold = 0.06\n    this.#bloomPass.strength = 0.71\n    this.#bloomPass.radius = 0.16\n    this.#bloomPass.enabled = true\n\n    this.#zoomBlurPass = new ShaderPass(zoomBlurPass)\n    this.#fxaaPass = new ShaderPass(FXAAPass)\n    this.#fxaaPass.enabled = window.devicePixelRatio === 1\n\n    this.#renderPass = new RenderPass(this.#scene, this.#camera, undefined, undefined, 1)\n    this.#renderPass.clear = true\n    this.#renderPass.needsSwap = false\n\n    this.#bloomComposer.addPass(this.#renderPass)\n    this.#bloomComposer.addPass(this.#bloomPass)\n\n    this.#compositingPass = new ShaderPass(CompositingPass)\n    this.#compositingPass.uniforms.tBloom.value = this.#bloomComposer.renderTarget2.texture\n    this.#compositingPass.renderToScreen = false\n\n    // final render stack\n    this.#genericComposer.addPass(this.#renderPass)\n    //this.#genericComposer.addPass(this.#fxaaPass)\n    //this.#genericComposer.addPass(this.#zoomBlurPass)\n    this.#genericComposer.addPass(this.#compositingPass)\n\n    this.setBloomAmount(0.6)\n\n    /*if (debugSystem.isDebug) {\n      const tweakpaneObject = {\n        bloomAmount: this.#bloomAmount,\n        bloomStrength: this.#bloomPass.strength,\n        bloomThreshold: this.#bloomPass.threshold,\n        bloomRadius: this.#bloomPass.radius,\n        particlesUseBloom: this.#particlesUseBloom,\n        useFXAA: this.#fxaaPass.enabled,\n        useBloom: this.#bloomAmount > 0\n      }\n\n      tweakpaneManager.pane\n        .addInput(tweakpaneObject, 'particlesUseBloom', { label: 'Particles bloom' })\n        .on('change', () => {\n          this.#particlesUseBloom = tweakpaneObject.particlesUseBloom\n        })\n\n      tweakpaneManager.pane.addInput(tweakpaneObject, 'useFXAA', { label: 'Use FXAA' }).on('change', () => {\n        this.#fxaaPass.enabled = tweakpaneObject.useFXAA\n      })\n\n      tweakpaneManager.pane.addInput(tweakpaneObject, 'useBloom', { label: 'Use Bloom' }).on('change', () => {\n        this.#bloomAmount = tweakpaneObject.useBloom ? 0.8 : 0\n      })\n\n      tweakpaneManager.pane\n        .addInput(tweakpaneObject, 'bloomAmount', { min: 0, max: 1, label: 'Bloom amount' })\n        .on('change', () => {\n          this.setBloomAmount(tweakpaneObject.bloomAmount)\n        })\n\n      tweakpaneManager.pane\n        .addInput(tweakpaneObject, 'bloomStrength', { min: 0, max: 4, label: 'Bloom strength' })\n        .on('change', () => {\n          this.#bloomPass.strength = tweakpaneObject.bloomStrength\n        })\n\n      tweakpaneManager.pane\n        .addInput(tweakpaneObject, 'bloomThreshold', { min: 0, max: 1, label: 'Bloom threshold' })\n        .on('change', () => {\n          this.#bloomPass.threshold = tweakpaneObject.bloomThreshold\n        })\n\n      tweakpaneManager.pane\n        .addInput(tweakpaneObject, 'bloomRadius', { min: 0, max: 1, label: 'Bloom radius' })\n        .on('change', () => {\n          this.#bloomPass.radius = tweakpaneObject.bloomRadius\n        })\n    }*/\n  }\n\n  set fadeAmount(value: number) {\n    this.#fadeAmount = value\n    this.#compositingPass.uniforms.fadeAmount.value = this.#fadeAmount\n  }\n\n  setSceneAndCamera(scene: Scene, camera: Camera): void {\n    this.#scene = scene\n    this.#camera = camera\n\n    this.#renderPass.camera = camera\n    this.#renderPass.scene = scene\n  }\n\n  setBloomAmount(value: number): void {\n    this.#bloomAmount = value\n    this.#compositingPass.uniforms.bloomAmount.value = this.#bloomAmount\n  }\n\n  updateBloomList() {\n    //collect all affected objects\n    this.#bloomProcessObjects.length = 0\n\n    if (this.#scene && this.#scene.children) {\n      //TODO: Optimize: Filter out more objects, like childs of parents with hideFromBloom\n      this.#scene.traverse((obj: any) => {\n        if (\n          (obj.type === 'Mesh' ||\n            obj.type === 'SkinnedMesh' ||\n            obj.type === 'Group' ||\n            obj.userData.isParticleSystem) &&\n          (obj.userData.enableBloom === true ||\n            obj.userData.enableBloom === false ||\n            obj.userData.hideFromBloom ||\n            obj.userData.isParticleSystem)\n        ) {\n          if (\n            !obj.name.includes('Collider') &&\n            !obj.name.includes('Sensor') &&\n            !this.#bloomProcessObjects.find(x => obj.uuid && x.uuid === obj.uuid)\n          ) {\n            this.#bloomProcessObjects.push(obj)\n          }\n        }\n      })\n    }\n  }\n\n  render(time: number, delta: number) {\n    if (this.#bloomAmount > 0) {\n      this.#bloomPass.enabled = true\n      if (this.#bloomProcessObjects.length === 0) {\n        this.updateBloomList()\n      }\n\n      this.#bloomProcessObjects.forEach((obj: Object3D) => {\n        //hide object completelly, like camera black fade plane\n        if (obj.userData.hideFromBloom) {\n          obj.userData.visibleStateBeforeBloom = obj.visible\n          obj.visible = false\n        } else if (obj.userData.isParticleSystem) {\n          if (!this.#particlesUseBloom) {\n            obj.visible = false\n          }\n        }\n\n        //hide object but contribute to depth for selective bloom\n        else if (obj.userData.enableBloom === false || obj.userData.enableBloom === undefined) {\n          const mesh = obj as Mesh\n          mesh.userData.originalMaterial = mesh.material\n          mesh.material = mesh.type === 'SkinnedMesh' ? blackMaterialSkinned : blackMaterial\n          //if (mesh.material) {\n          //  ;(mesh.material as Material).colorWrite = false\n          // }\n        } else {\n          const mesh = obj as Mesh\n          if (mesh) {\n            const mat = mesh.material as ShaderMaterial\n            if (mat.userData.shader && mat.userData.shader.uniforms.isBloomRender) {\n              mat.userData.shader.uniforms.isBloomRender.value = 1\n            }\n\n            if (mat.uniforms && mat.uniforms.isBloomRender) {\n              mat.uniforms.isBloomRender.value = 1\n            }\n          }\n        }\n      })\n\n      this.#bloomComposer.render(delta)\n\n      this.#bloomProcessObjects.forEach((obj: Object3D) => {\n        if (obj.userData.hideFromBloom) {\n          obj.visible = obj.userData.visibleStateBeforeBloom\n        } else if (obj.userData.isParticleSystem) {\n          obj.visible = true\n        } else if (obj.userData.enableBloom === false || obj.userData.enableBloom === undefined) {\n          const mesh = obj as Mesh\n          //if (mesh.material) {\n          //  ;(mesh.material as Material).colorWrite = true\n          //}\n          mesh.material = mesh.userData.originalMaterial\n        } else {\n          const mesh = obj as Mesh\n          if (mesh) {\n            const mat = mesh.material as ShaderMaterial\n            if (mat.userData.shader && mat.userData.shader.uniforms.isBloomRender) {\n              mat.userData.shader.uniforms.isBloomRender.value = 0\n            }\n\n            if (mat.uniforms && mat.uniforms.isBloomRender) {\n              mat.uniforms.isBloomRender.value = 0\n            }\n          }\n        }\n      })\n    } else {\n      this.#bloomPass.enabled = false\n    }\n\n    this.#genericComposer.render(delta)\n\n    this.#renderer.setRenderTarget(null)\n  }\n\n  resize() {\n    const size = sizeSystem.size\n    const w = size.width // / size.sizeRatio\n    const h = size.height // / size.sizeRatio\n\n    this.#genericComposer.setSize(w, h)\n    this.#bloomComposer.setSize(w, h)\n\n    this.#fxaaPass.uniforms.resolution.value.set(w, h)\n    this.#compositingPass.uniforms.resolution.value.set(w, h)\n    this.#compositingPass.uniforms.tBloom.value = this.#bloomComposer.renderTarget2.texture\n  }\n\n  dispose() {\n    /*this.#renderer = undefined\n    this.#scene = undefined\n    this.#camera = undefined*/\n  }\n}\n","import {\n  AnimationClip,\n  Material,\n  Object3D,\n  PMREMGenerator,\n  RepeatWrapping,\n  sRGBEncoding,\n  Texture,\n  TextureLoader,\n  UnsignedByteType\n} from 'three'\nimport { EXRLoader } from 'three/examples/jsm/loaders/EXRLoader'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport globalAssetsManifest from '@/components/configs/global-assets-manifest.json'\nimport CoinDefinition from '@/shared/common/coin-definition'\n\nimport globalRenderer from '@/shared/misc/global-renderer'\nimport Denomination from './common/denomination'\nimport Action from './common/action'\nimport debug from 'debug'\nexport interface LoadingItem {\n  key: string\n  url: string\n  source?: string\n  loadOnInit?: boolean\n  size?: number\n  onlyPreload?: boolean\n}\n\nconst textureLoader = new TextureLoader()\nconst gltfLoader = new GLTFLoader()\nconst exrLoader = new EXRLoader()\n\nclass AssetsSystem {\n  #pmremGenerator: PMREMGenerator = {} as PMREMGenerator\n  #textureLibrary: Map<string, Texture> = new Map<string, Texture>()\n  #modelLibrary: Map<string, Object3D> = new Map<string, Object3D>()\n  #animationsLibrary: Map<string, AnimationClip[]> = new Map<string, AnimationClip[]>()\n  #materialLibrary: Map<string, Material> = new Map<string, Material>()\n  #loadedCoins: Map<Denomination, boolean> = new Map<Denomination, boolean>()\n  #optionalLoadingItems: LoadingItem[] = []\n  onEnvMapUpdated: Action<Texture> = new Action<Texture>()\n  #namespaceWeakMap: WeakMap<any, string> = new WeakMap()\n\n  async init() {\n    this.#pmremGenerator = new PMREMGenerator(globalRenderer.getRenderer())\n    this.#pmremGenerator.compileEquirectangularShader()\n\n    //TODO: Only load coins used initital\n    /*const coinManifest: LoadingItem[] = []\n    coinDefinitions\n      .filter(x => x.loadOnStart)\n      .forEach((coinDefinition: CoinDefinition) => {\n        this.addCoinToManifest(coinManifest, coinDefinition)\n      })\n\n    const preloadComponentImages = [\n      { id: 'parallax_background', path: require('@/features/shared/components/images/parallax_background.jpg') },\n      { id: 'parallax_foreground', path: require('@/features/shared/components/images/parallax_foreground.png') },\n      { id: 'parallax_middle', path: require('@/features/shared/components/images/parallax_middle.png') },\n      { id: 'parallax_flags', path: require('@/features/shared/components/images/flags.png') },\n      { id: 'tjing_button_up', path: require('@/features/control-panel/images/tjing-button.png') },\n      { id: 'tjing_button_down', path: require('@/features/control-panel/images/tjing-button-down.png') },\n      { id: 'card_vault', path: require('@/features/control-panel/images/card_vault.jpg') }\n    ]\n\n    const cssImages = preloadComponentImages.map(obj => {\n      return {\n        key: obj.id,\n        url: obj.path,\n        source: '',\n        loadOnInit: true,\n        onlyPreload: true\n      }\n    })\n\n    const allAssets: LoadingItem[] = [...(globalAssetsManifest as LoadingItem[]), ...coinManifest, ...cssImages]\n    */\n    const allAssets: LoadingItem[] = [...(globalAssetsManifest as LoadingItem[])]\n\n    return this.loadInitialManifest(allAssets)\n  }\n\n  private addCoinToManifest(coinManifest: LoadingItem[], coinDefinition: CoinDefinition) {\n    if (coinManifest.find(x => x.key === coinDefinition.modelName) === undefined) {\n      coinManifest.push({\n        key: coinDefinition.modelName,\n        url: './models/coins/' + coinDefinition.modelName\n      })\n    }\n\n    coinManifest.push({\n      key: coinDefinition.normalMap,\n      url: './textures/coins/' + coinDefinition.normalMap\n    })\n\n    coinManifest.push({\n      key: coinDefinition.diffuseMap,\n      url: './textures/coins/' + coinDefinition.diffuseMap\n    })\n  }\n\n  loadSingleCoin(coinDefinition: CoinDefinition) {\n    if (this.isCoinLoaded(coinDefinition.denomination)) {\n      return Promise.resolve()\n    }\n\n    const coinManifest: LoadingItem[] = []\n    this.addCoinToManifest(coinManifest, coinDefinition)\n    return new Promise<void>((resolve, reject) => {\n      this.loadManifest(coinManifest, 'coins').then(\n        () => {\n          this.#loadedCoins.set(coinDefinition.denomination, true)\n          resolve()\n        },\n        () => {\n          reject()\n        }\n      )\n    })\n  }\n\n  isCoinLoaded(denomination: Denomination): boolean {\n    if (this.#loadedCoins.has(denomination) && this.#loadedCoins.get(denomination)) {\n      return true\n    }\n    return false\n  }\n\n  loadInitialManifest(allAssets: LoadingItem[]) {\n    return new Promise<void>((resolve, reject) => {\n      this.loadManifest(allAssets, 'global').then(\n        () => {\n          resolve()\n        },\n        () => {\n          reject()\n        }\n      )\n    })\n  }\n\n  loadManifest(manifest: LoadingItem[], namespace: string) {\n    const allPromises: Promise<void>[] = manifest.map(item => {\n      return new Promise<void>((resolve, reject) => {\n        const onItemLoaded = () => {\n          resolve()\n        }\n        const onItemProgress = () => {}\n        const onItemError = () => {\n          reject()\n        }\n\n        if (item.onlyPreload) {\n          onItemLoaded()\n          return\n        }\n\n        if (item.url.includes('.png') || item.url.includes('.jpg')) {\n          textureLoader.load(\n            item.url,\n            texture => {\n              texture.flipY = false\n              texture.wrapS = texture.wrapT = RepeatWrapping\n              texture.encoding = sRGBEncoding\n              this.addTexture(item.key, texture, namespace)\n              onItemLoaded()\n            },\n            onItemProgress,\n            onItemError\n          )\n        } else if (item.url.includes('.gltf') || item.url.includes('.glb')) {\n          gltfLoader.load(\n            item.url,\n            gltf => {\n              this.addAnimations(item.key, gltf.animations, namespace)\n              this.addModel(item.key, gltf.scene as Object3D, namespace)\n              onItemLoaded()\n            },\n            onItemProgress,\n            onItemError\n          )\n        } else if (item.url.includes('.exr')) {\n          exrLoader.setDataType(UnsignedByteType).load(\n            item.url,\n            (texture: Texture) => {\n              texture.flipY = false\n              //texture.encoding = sRGBEncoding\n              const exrCubeRenderTarget = this.#pmremGenerator.fromEquirectangular(texture)\n              this.addTexture(item.key, exrCubeRenderTarget.texture, namespace)\n\n              texture.dispose()\n              onItemLoaded()\n            },\n            onItemProgress,\n            onItemError\n          )\n        }\n      })\n    })\n\n    return Promise.all(allPromises).then(\n      () => {},\n      error => {\n        console.error('Could not load all textures:', error)\n      }\n    )\n  }\n\n  unloadManifest(manifest: LoadingItem[]) {\n    manifest.forEach((item: LoadingItem) => {\n      this.removeTexture(item.key)\n      this.removeModel(item.key)\n    })\n  }\n\n  unloadNamespace(namespace: string) {\n    //remove textures\n    const removeTextureKeys: string[] = []\n    this.#textureLibrary.forEach((value, key) => {\n      if (this.#namespaceWeakMap.has(value) && this.#namespaceWeakMap.get(value) === namespace) {\n        removeTextureKeys.push(key)\n        this.#namespaceWeakMap.delete(value)\n      }\n    })\n    removeTextureKeys.forEach(key => {\n      this.removeTexture(key)\n    })\n\n    //remove models\n    const removeModelKeys: string[] = []\n    this.#modelLibrary.forEach((value, key) => {\n      if (this.#namespaceWeakMap.has(value) && this.#namespaceWeakMap.get(value) === namespace) {\n        removeModelKeys.push(key)\n        this.#namespaceWeakMap.delete(value)\n      }\n    })\n    removeModelKeys.forEach(key => {\n      this.removeModel(key)\n    })\n\n    //remove animations\n    const removeAnimationsKeys: string[] = []\n    this.#animationsLibrary.forEach((value, key) => {\n      if (this.#namespaceWeakMap.has(value) && this.#namespaceWeakMap.get(value) === namespace) {\n        removeAnimationsKeys.push(key)\n        this.#namespaceWeakMap.delete(value)\n      }\n    })\n    removeAnimationsKeys.forEach(key => {\n      this.removeAnimations(key)\n    })\n\n    //remove materials\n    const removeMaterialsKeys: string[] = []\n    this.#materialLibrary.forEach((value, key) => {\n      if (this.#namespaceWeakMap.has(value) && this.#namespaceWeakMap.get(value) === namespace) {\n        removeMaterialsKeys.push(key)\n        this.#namespaceWeakMap.delete(value)\n      }\n    })\n    removeMaterialsKeys.forEach(key => {\n      this.removeModel(key)\n    })\n  }\n\n  addTexture(key: string, texture: Texture, namespace: string) {\n    if (this.#textureLibrary.has(key)) {\n      return\n    } else {\n      this.#namespaceWeakMap.set(texture, namespace)\n      this.#textureLibrary.set(key, texture)\n    }\n  }\n\n  getTexture(key: string): Texture | null {\n    if (this.#textureLibrary.has(key)) {\n      const texture = this.#textureLibrary.get(key)\n\n      if (texture) {\n        return texture\n      } else {\n        return null\n      }\n    } else {\n      return null\n    }\n  }\n\n  getTextureAsync(key: string, namespace = 'global'): Promise<Texture> {\n    return new Promise((resolve, reject) => {\n      const existingTexture = this.getTexture(key)\n      if (existingTexture) {\n        resolve(existingTexture)\n      } else {\n        const optionalAsset = this.#optionalLoadingItems.find(item => item.key === key)\n        if (optionalAsset) {\n          textureLoader.load(optionalAsset.url, texture => {\n            texture.flipY = false\n            texture.wrapS = texture.wrapT = RepeatWrapping\n            texture.encoding = sRGBEncoding\n            this.addTexture(optionalAsset.key, texture, namespace)\n            resolve(texture)\n          })\n        } else {\n          console.warn('opn', key, this.#optionalLoadingItems)\n          debug('optional asset does not exist: ' + key)\n          reject()\n        }\n      }\n    })\n  }\n\n  removeTexture(key: string) {\n    if (this.#textureLibrary.has(key)) {\n      //TODO: unload/dispose\n      if (this.#textureLibrary.get(key)) {\n        this.#textureLibrary.get(key)!.dispose()\n      }\n      this.#textureLibrary.delete(key)\n    }\n  }\n\n  addModel(key: string, model: Object3D, namespace: string) {\n    model.userData.enableBloom = false\n    //model.userData.hideFromBloom = true\n    if (!this.#modelLibrary.has(key)) {\n      this.#namespaceWeakMap.set(model, namespace)\n      this.#modelLibrary.set(key, model)\n    }\n  }\n\n  getModel(key: string): Object3D | undefined {\n    if (this.#modelLibrary.has(key)) {\n      return this.#modelLibrary.get(key)\n    } else {\n      return\n    }\n  }\n\n  removeModel(key: string) {\n    if (this.#modelLibrary.has(key)) {\n      //TODO: unload/dispose\n      this.#modelLibrary.delete(key)\n    }\n  }\n\n  addAnimations(key: string, animations: AnimationClip[], namespace: string) {\n    if (!this.#animationsLibrary.has(key)) {\n      this.#animationsLibrary.set(key, animations)\n      this.#namespaceWeakMap.set(animations, namespace)\n    }\n  }\n\n  getAnimations(key: string): AnimationClip[] | undefined {\n    if (this.#animationsLibrary.has(key)) {\n      return this.#animationsLibrary.get(key)\n    } else {\n      return\n    }\n  }\n\n  removeAnimations(key: string) {\n    if (this.#animationsLibrary.has(key)) {\n      //TODO: unload/dispose\n      this.#animationsLibrary.delete(key)\n    }\n  }\n\n  addMaterial(key: string, material: Material, namespace: string) {\n    this.#namespaceWeakMap.set(material, namespace)\n    this.#materialLibrary.set(key, material)\n  }\n\n  getMaterial(key: string): Material | undefined {\n    if (this.#materialLibrary.has(key)) {\n      return this.#materialLibrary.get(key)\n    } else {\n      return\n    }\n  }\n\n  removeMaterial(key: string) {\n    if (this.#materialLibrary.has(key)) {\n      //TODO: unload/dispose\n      this.#materialLibrary.delete(key)\n    }\n  }\n}\nexport default new AssetsSystem()\n","export enum Currency {\n  NotDefined = 'NotDefined',\n  ALL = 'All',\n\n  TJISEK = 'TJISEK',\n  SEK = 'SEK',\n\n  TJIEUR = 'TJIEUR',\n  EUR = 'EUR'\n}\n\nexport interface CurrencyInfo {\n  currency: string\n  symbol: string\n}\n\nconst currencyInfo: CurrencyInfo[] = [\n  { currency: Currency.NotDefined, symbol: '' },\n  { currency: Currency.ALL, symbol: '' },\n\n  { currency: Currency.TJISEK, symbol: 'kr' },\n  { currency: Currency.SEK, symbol: 'kr' },\n\n  { currency: Currency.TJIEUR, symbol: '€' },\n  { currency: Currency.EUR, symbol: '€' }\n]\n\nexport function getCurrencyInfo(currency: string): CurrencyInfo {\n  return currencyInfo.find(x => x.currency === currency)!\n}\n\nexport default Currency\n","enum Denomination {\n  None = 0,\n\n  OneFraction = 1,\n  TwoFraction = 2,\n  ThreeFraction = 3,\n  FourFraction = 4,\n  FiveFraction = 5,\n  SixFraction = 6,\n  SevenFraction = 7,\n  EightFraction = 8,\n  NineFraction = 9,\n\n  TenFraction = 10,\n  TwentyFraction = 20,\n  ThirtyFraction = 30,\n  FortyFraction = 40,\n  FiftyFraction = 50,\n  SixtyFraction = 60,\n  SeventyFraction = 70,\n  EightyFraction = 80,\n  NinetyFraction = 90,\n\n  One = 100,\n  Two = 200,\n  Three = 300,\n  Four = 400,\n  Five = 500,\n  Six = 600,\n  Seven = 700,\n  Eight = 800,\n  Nine = 900,\n\n  Ten = 1000,\n  Twenty = 2000,\n  Thirty = 3000,\n  Forty = 4000,\n  Fifty = 5000,\n  Sixty = 6000,\n  Seventy = 7000,\n  Eighty = 8000,\n  Ninety = 9000,\n\n  OneHundred = 10000,\n  TwoHundred = 20000,\n  ThreeHundred = 30000,\n  FourHundred = 40000,\n  FiveHundred = 50000,\n  SixHundred = 60000,\n  SevenHundred = 70000,\n  EightHundred = 80000,\n  NineHundred = 90000,\n\n  OneThousand = 100000,\n  TwoThousand = 200000,\n  ThreeThousand = 300000,\n  FourThousand = 400000,\n  FiveThousand = 500000,\n  SixThousand = 600000,\n  SevenThousand = 700000,\n  EightThousand = 800000,\n  NineThousand = 900000\n\n  // TenThousand = 1000000\n}\n\nexport default Denomination\n","import CoinDefinition from './coin-definition'\nimport Currency from './currency'\nimport Denomination from './denomination'\n\nconst coinDefinitions: CoinDefinition[] = []\n\nconst getBaseColor = (denomination: Denomination): number => {\n  switch (denomination) {\n    case 100:\n    case 200:\n    case 2000:\n    case 3000:\n    case 4000:\n    case 10000:\n    case 20000:\n    case 30000:\n    case 100000:\n    case 300000:\n      return 0xc9a08e\n    case 300:\n    case 400:\n    case 5000:\n    case 6000:\n    case 7000:\n    case 40000:\n    case 50000:\n    case 60000:\n    case 200000:\n    case 400000:\n    case 600000:\n      return 0xfcfaf5\n    case 500:\n    case 600:\n    case 700:\n    case 800:\n    case 900:\n    case 1000:\n    case 8000:\n    case 9000:\n    case 70000:\n    case 80000:\n    case 90000:\n    case 500000:\n    case 700000:\n    case 800000:\n    case 900000:\n      return 0xffcb67\n  }\n\n  return 0xffffff\n}\n\nconst level1Denominations = [\n  Denomination.One,\n  Denomination.Two,\n  Denomination.Three,\n  Denomination.Four,\n  Denomination.Five,\n  Denomination.Six,\n  Denomination.Seven,\n  Denomination.Eight,\n  Denomination.Nine,\n  Denomination.Ten\n]\nlevel1Denominations.forEach((denomination: Denomination, index) => {\n  coinDefinitions.push({\n    denomination,\n    currency: Currency.ALL,\n    radius: 86,\n    extraLevelScale: 1 + (index > 2 ? 0.1 : 0) + (index > 3 ? 0.1 : 0),\n    level: 1,\n    weight: 0.003,\n    modelName: 'Level_1_Coin.glb',\n    normalMap: 'Level_1_' + Number(denomination) / 100 + 'KR_normal.png',\n    diffuseMap: 'Level_1_' + Number(denomination) / 100 + 'KR_BaseColor.png',\n    gemColor: 0x000000,\n    baseColor: getBaseColor(denomination),\n    loadOnStart: true\n  })\n})\n\nconst level2Denominations = [\n  Denomination.Twenty,\n  Denomination.Thirty,\n  Denomination.Forty,\n  Denomination.Fifty,\n  Denomination.Sixty,\n  Denomination.Seventy,\n  Denomination.Eighty,\n  Denomination.Ninety\n]\nlevel2Denominations.forEach((denomination: Denomination, index) => {\n  coinDefinitions.push({\n    denomination,\n    currency: Currency.ALL,\n    radius: 222,\n    extraLevelScale: 1 + (index > 2 ? 0.1 : 0) + (index > 5 ? 0.1 : 0),\n    level: 2,\n    weight: 0.002,\n    modelName: 'Level_2_Coin.glb',\n    normalMap: 'Level_2_' + Number(denomination) / 100 + 'KR_normal.png',\n    diffuseMap: 'Level_2_' + Number(denomination) / 100 + 'KR_BaseColor.png',\n    gemColor: 0x000000,\n    baseColor: getBaseColor(denomination),\n    loadOnStart: false\n  })\n})\n\nconst level3Denominations = [\n  Denomination.OneHundred,\n  Denomination.TwoHundred,\n  Denomination.ThreeHundred,\n  Denomination.FourHundred,\n  Denomination.FiveHundred,\n  Denomination.SixHundred,\n  Denomination.SevenHundred,\n  Denomination.EightHundred,\n  Denomination.NineHundred\n]\n\nconst gemColors = [\n  0x4b7e1c, 0x4f9c24, 0x55c430, 0x054a7e, 0x0860a6, 0x0d7cd3, 0x902398, 0xb42ebf, 0xd438e1, 0x339933, 0x333399\n]\nlevel3Denominations.forEach((denomination: Denomination, index: number) => {\n  coinDefinitions.push({\n    denomination,\n    currency: Currency.ALL,\n    radius: 220,\n    extraLevelScale: 1 + (index > 2 ? 0.1 : 0) + (index > 5 ? 0.1 : 0),\n    weight: 0.001,\n    level: 3,\n    modelName: 'Level_3_Coin.glb',\n    normalMap: 'Level_3_' + Number(denomination) / 100 + 'KR_normal.png',\n    diffuseMap: 'Level_3_' + Number(denomination) / 100 + 'KR_BaseColor.png',\n    gemColor: gemColors[index],\n    baseColor: getBaseColor(denomination),\n    loadOnStart: false\n  })\n})\n\nconst level4Denominations = [\n  Denomination.OneThousand,\n  Denomination.TwoThousand,\n  Denomination.ThreeThousand,\n  Denomination.FourThousand,\n  Denomination.FiveThousand,\n  Denomination.SixThousand,\n  Denomination.SevenThousand,\n  Denomination.EightThousand,\n  Denomination.NineThousand\n]\nlevel4Denominations.forEach((denomination: Denomination, index) => {\n  coinDefinitions.push({\n    denomination,\n    currency: Currency.ALL,\n    radius: 300,\n    extraLevelScale: 1,\n    level: 4,\n    weight: 0.001,\n    modelName: 'Level_4_Coin.glb',\n    normalMap: 'Level_4_' + Number(denomination) / 100 + 'KR_normal.png',\n    diffuseMap: 'Level_4_' + Number(denomination) / 100 + 'KR_BaseColor.png',\n    gemColor: 0x000000,\n    baseColor: getBaseColor(denomination),\n    loadOnStart: false\n  })\n})\n\nexport default coinDefinitions\n","import CoinDefinition from './coin-definition'\nimport Denomination from './denomination'\nimport coinDefinitions from './coin-definitions'\n\nclass CoinFactory {\n  #definitionByDenomination = new Map<Denomination, CoinDefinition>()\n\n  constructor() {\n    coinDefinitions.forEach(definition => {\n      this.#definitionByDenomination.set(definition.denomination, definition)\n    })\n  }\n\n  getCoinDefinition(d: Denomination) {\n    return this.#definitionByDenomination.get(d) as CoinDefinition\n  }\n}\n\nexport default new CoinFactory()\n","export default `#if defined( USE_ENVMAP )\n#ifdef ENVMAP_MODE_REFRACTION\n\tuniform float refractionRatio;\n#endif\nvec3 getIBLIrradiance( const in vec3 normal ) {\n\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t#else\n\t\treturn vec3( 0.0 );\n\t#endif\n}\nvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec3 reflectVec;\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t// Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t#else\n\t\treturn vec3( 0.0 );\n\t#endif\n}\n#endif\n`\n","import assetsSystem from '@/shared/assets-system'\nimport { Color, MeshStandardMaterial, Texture } from 'three'\nimport envmap_physical_pars_fragment from './envmap_physical_pars_fragment'\n\nexport default {\n  getMaterial(normalMapId: string, diffuseMapId: string, gemColor = 0x000000) {\n    const material = new MeshStandardMaterial({\n      normalMap: new Texture(),\n      map: new Texture(),\n      metalness: 1,\n      roughness: 0.07,\n      envMap: assetsSystem.getTexture('envMap'),\n      envMapIntensity: 0.5,\n      vertexColors: false,\n      color: 0xffffff\n    })\n\n    material.normalMap = assetsSystem.getTexture(normalMapId)\n    material.map = assetsSystem.getTexture(diffuseMapId)\n    material.userData.shader = {\n      uniforms: {\n        isBloomRender: { value: 0 },\n        envMapTint: { value: new Color() }\n      }\n    }\n    if (gemColor > 0) {\n      material.defines['USE_CRYSTAL'] = ''\n    }\n    material.onBeforeCompile = shader => {\n      shader.uniforms.gemColor = { value: new Color(gemColor) }\n      shader.uniforms.envMapTint = material.userData.shader.uniforms.envMapTint\n      shader.uniforms.volumetricNoiseMap = { value: assetsSystem.getTexture('coin-noise') }\n      shader.uniforms.isBloomRender = { value: 0 }\n      //frag\n\n      shader.fragmentShader = shader.fragmentShader\n        //add uniforms and textures\n        .replace(\n          'uniform vec3 diffuse;',\n          `\n            uniform vec3 diffuse;\n            uniform vec3 gemColor;\n            uniform vec3 envMapTint;\n            uniform float isBloomRender;\n            uniform sampler2D volumetricNoiseMap;\n            vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm ) {\n              vec3 vSigmaX = dFdx( surf_pos );\n              vec3 vSigmaY = dFdy( surf_pos );\n              vec3 vN = normalize(surf_norm);    // normalized\n              vec3 R1 = cross( vSigmaY, vN );\n              float fDet = dot( vSigmaX, R1 );\n              return normalize( abs( fDet ) * surf_norm  );\n            }\n          `\n        )\n        //override to add a tint color\n        .replace('#include <envmap_physical_pars_fragment>', envmap_physical_pars_fragment)\n        //custom diffuse color\n        .replace(\n          '#include <color_fragment>',\n          `\n          float isSwatch5 = 1.0-smoothstep(0.0, 0.1,texelColor.r+texelColor.g+texelColor.b);\n\n          float highlightMask = 0.0;\n          vec4 noiseColor = vec4(0.0);\n\n          #if defined( USE_CRYSTAL )\n            vec3 normalInTangentSpace = perturbNormalArb(normalize(vViewPosition),vNormal);\n            float random = 0.4;\n          \n            // perlin-isch noise\n            vec2 uvMultiplier = vec2(0.5);\n            float offsetAmount = texture2D( volumetricNoiseMap, vUv * 0.6 + vec2(random,random)).r;\n            vec2 newUV = (vUv * uvMultiplier + vec2(random, random)) + vec2( (normalInTangentSpace.xy + normalInTangentSpace.z*0.02)) * offsetAmount;\n            noiseColor = texture2D( volumetricNoiseMap, newUV)*3.0;\n            \n            highlightMask = smoothstep(0.3,0.6,(noiseColor.r + noiseColor.g + noiseColor.b)*0.3) * isSwatch5 * 0.05;\n          #endif\n\n          vec3 gemPlusNoiseColor = gemColor; //gemroom\n          gemPlusNoiseColor *= noiseColor.rgb;\n          \n          diffuseColor.rgb = texelColor.rgb;\n          diffuseColor.rgb += gemPlusNoiseColor * isSwatch5;\n        `\n        )\n        //override metalnessFactor to disable it for crystal material\n        .replace(\n          '#include <metalnessmap_fragment>',\n          `\n          float metalnessFactor = metalness * (1.0-isSwatch5);\n        `\n        )\n        //light calculation mix\n        .replace(\n          'vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;',\n          `\n          totalEmissiveRadiance = diffuseColor.rgb * ( 0.1 + 0.8 * highlightMask) * isSwatch5;\n          vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n        `\n        )\n        //final color, clamp and control bloom\n        .replace(\n          '#include <output_fragment>',\n          `\n          gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n          \n          gl_FragColor = mix(gl_FragColor,vec4(totalEmissiveRadiance,1.0), isBloomRender);\n          //gl_FragColor.rgb = clamp(gl_FragColor.rgb, vec3(0.0), vec3(1.4));\n          \n        `\n        )\n\n      material.userData.shader = shader\n    }\n\n    return material\n  }\n}\n","import { Howl, Howler } from 'howler'\nimport { MathUtils } from 'three'\n\ninterface ISoundMapItem {\n  id: string\n  file: string\n  loop?: boolean\n  volume?: number\n  randomVolume?: number\n}\n\nclass SoundManager {\n  soundMaps: Map<string, ISoundMapItem[]> = new Map<string, ISoundMapItem[]>()\n\n  #ambienceChannel1: Howl | undefined\n  #ambienceChannel2: Howl | undefined\n  #currentAmbientIds: string[] = []\n\n  constructor() {\n    Howler.volume(0.3)\n  }\n\n  async registerSoundMap(id: string, map: any) {\n    //cache important sounds?\n    this.soundMaps.set(id, map as ISoundMapItem[])\n  }\n\n  unregisterSoundMap(id: string) {\n    //TODO: unload from cache\n    this.soundMaps.delete(id)\n  }\n\n  setSoundVolume(howl: Howl, volume: number) {\n    if (Howler.ctx.state === 'running') {\n      howl.volume(volume)\n    }\n  }\n\n  changeAmbience(ids: string[]) {\n    if (this.#currentAmbientIds.join('') === ids.join('')) {\n      return\n    }\n    this.#currentAmbientIds = ids.concat()\n\n    if (this.#ambienceChannel1) {\n      this.#ambienceChannel1.off('fade')\n      this.#ambienceChannel1.once('fade', () => {\n        if (ids.length > 0) {\n          this.#ambienceChannel1 = this.play(ids[0])\n          this.#ambienceChannel1.fade(0, this.#ambienceChannel1.volume(), 400)\n        } else {\n          this.#ambienceChannel1 = undefined\n        }\n      })\n      this.#ambienceChannel1.fade(this.#ambienceChannel1.volume(), 0, 400)\n    } else {\n      if (ids.length > 0) {\n        this.#ambienceChannel1 = this.play(ids[0])\n        this.#ambienceChannel1.fade(0, this.#ambienceChannel1.volume(), 400)\n      }\n    }\n\n    if (this.#ambienceChannel2) {\n      this.#ambienceChannel2.off('fade')\n      this.#ambienceChannel2.once('fade', () => {\n        if (ids.length > 1) {\n          this.#ambienceChannel2 = this.play(ids[1])\n          this.#ambienceChannel2.fade(0, this.#ambienceChannel2.volume(), 400)\n        } else {\n          this.#ambienceChannel2 = undefined\n        }\n      })\n      this.#ambienceChannel2.fade(this.#ambienceChannel2.volume(), 0, 400)\n    } else {\n      if (ids.length > 1) {\n        this.#ambienceChannel2 = this.play(ids[1])\n        this.#ambienceChannel2.fade(0, this.#ambienceChannel2.volume(), 400)\n      }\n    }\n  }\n\n  play(id: string, rate = 1): Howl {\n    let soundUrl = `sounds/${id}.mp3`\n    let loop = false\n    let volume = 1\n    const soundMapItem = this.getMapItem(id)\n    if (soundMapItem) {\n      soundUrl = `sounds/${soundMapItem.file}.mp3`\n      if (soundMapItem.loop) {\n        loop = true\n      }\n\n      if (soundMapItem.volume) {\n        volume = soundMapItem.volume\n      }\n\n      if (soundMapItem.randomVolume) {\n        volume *= 1 - Math.random() * soundMapItem.randomVolume\n      }\n\n      volume = MathUtils.clamp(volume, 0, 1)\n    } else {\n      console.log('no sound in map with id:' + id)\n    }\n\n    const h = new Howl({\n      src: soundUrl,\n      rate: rate,\n      loop,\n      volume: volume\n    })\n\n    h.play()\n\n    return h\n  }\n\n  startLoop(id: string): Howl {\n    let soundUrl = `sounds/${id}.wav`\n\n    let volume = 0\n\n    const soundMapItem = this.getMapItem(id)\n    if (soundMapItem) {\n      soundUrl = `sounds/${soundMapItem.file}.mp3`\n\n      if (soundMapItem.volume) {\n        volume = soundMapItem.volume\n      }\n    } else {\n      console.log('no sound in map with id:' + id)\n    }\n\n    const h = new Howl({\n      src: soundUrl,\n      loop: true,\n      volume: volume\n    })\n\n    h.play()\n\n    return h\n  }\n\n  private getMapItem(id: string): ISoundMapItem | undefined {\n    let foundItem = undefined\n    this.soundMaps.forEach((value: ISoundMapItem[]) => {\n      const searchItem = value.find(x => x.id === id)\n      if (searchItem) {\n        foundItem = searchItem\n      }\n    })\n    return foundItem\n  }\n\n  private onAppActiveChanged = (isActive: boolean) => {\n    if (isActive) {\n      Howler.mute(false)\n    } else {\n      Howler.mute(true)\n    }\n  }\n}\n\nexport default new SoundManager()\n","class QueryStringUtil {\n  #dictionary: {\n    [key: string]: string | boolean\n  } = {}\n  constructor() {\n    let query = window.location.href.substring(window.location.href.indexOf('?') + 1, window.location.href.length)\n\n    if (query.indexOf('#') !== -1) {\n      query = query.substring(0, query.indexOf('#'))\n    }\n\n    const vars = query.split('&')\n    for (let i = 0; i < vars.length; i++) {\n      const pair = vars[i].split('=')\n      const key = decodeURIComponent(pair[0])\n      const val = decodeURIComponent(pair[1])\n      this.#dictionary[key] = val || true // true so \"?x\"; if( query.x ){}\n    }\n  }\n\n  get(id: string): string | boolean {\n    return this.#dictionary[id]\n  }\n}\n\nexport default new QueryStringUtil()\n","import globalRenderer from '@/shared/misc/global-renderer'\nimport PostEffectManager from './posteffects/posteffects-manager'\nimport {\n  Clock,\n  Color,\n  DynamicDrawUsage,\n  Fog,\n  InstancedMesh,\n  Mesh,\n  Object3D,\n  PerspectiveCamera,\n  PointLight,\n  Scene\n} from 'three'\nimport sizeSystem from '@/shared/size-system'\nimport assetsSystem from '@/shared/assets-system'\nimport coinFactory from '@/shared/common/coin-factory'\nimport CoinDefinition from '@/shared/common/coin-definition'\nimport coinMaterial from './materials/coin-material'\nimport soundSystem from '@/shared/sound-system'\nimport query from '@/shared/misc/query'\nimport Denomination from '@/shared/common/denomination'\n\nconst amount = 15\nconst count = Math.pow(amount, 3)\nconst dummy = new Object3D()\nconst randomSeed: number[] = []\nfor (let index = 0; index < count; index++) {\n  randomSeed.push(Math.random())\n  randomSeed.push(Math.random())\n  randomSeed.push(Math.random())\n}\n\nexport default class InstancedCoins {\n  private running = true\n  private clock = new Clock()\n  private time = 0\n  private renderer\n  private postEffectManager\n  private scene\n  private camera\n  private bloomListIsDirty = true\n  private coins: InstancedMesh | undefined\n  private light: PointLight\n\n  constructor() {\n    this.renderer = globalRenderer.getRenderer()\n    this.postEffectManager = new PostEffectManager(this.renderer)\n    this.scene = new Scene()\n    this.scene.background = new Color(0x000000)\n    this.scene.fog = new Fog(0x000000, 7, 12)\n    this.camera = new PerspectiveCamera(23, window.innerWidth / window.innerHeight, 0.1, 50)\n    this.postEffectManager.setSceneAndCamera(this.scene, this.camera)\n    this.postEffectManager.updateBloomList()\n\n    this.camera.position.z = 8\n    this.camera.position.y = 1\n    this.camera.rotation.x = -0.4\n\n    const light = new PointLight(0xffffff, 1.0)\n    light.position.set(0, 0, -3)\n    this.light = light\n    //this.scene.add(light)\n\n    const d = query.get('d') as string\n    let finalD\n    if (d) {\n      let dAsNumber = parseInt(d)\n      if (dAsNumber < 100) {\n        dAsNumber = 100\n      } else if (dAsNumber > 400000) {\n        dAsNumber = 400000\n      }\n      finalD = dAsNumber as Denomination\n    } else {\n      finalD = Denomination.Ten\n    }\n\n    const definition = coinFactory.getCoinDefinition(finalD)\n    assetsSystem.loadSingleCoin(definition).then(() => {\n      const model = assetsSystem.getModel(definition.modelName) as Object3D\n\n      this.processCoin(model, definition)\n\n      this.gameLoop()\n    })\n\n    soundSystem.changeAmbience(['ambience_vault'])\n\n    sizeSystem.onResize.add(this.resize)\n    this.resize()\n  }\n\n  private processCoin(model: Object3D, definition: CoinDefinition) {\n    const loadedMesh = model.clone().children.filter((x: Object3D) => x.type === 'Mesh')[0] as Mesh\n    const mat = coinMaterial.getMaterial(definition.normalMap, definition.diffuseMap, definition.gemColor)\n    const geo = loadedMesh.geometry\n    geo.scale(15, 15, 15)\n    const coinMesh = new InstancedMesh(loadedMesh.geometry, mat, count)\n    //coinMesh.instanceMatrix.setUsage(DynamicDrawUsage)\n    coinMesh.castShadow = false\n    coinMesh.receiveShadow = false\n    coinMesh.userData.enableBloom = true\n    /*coinMesh.scale.setScalar(100)\n    coinMesh.rotation.x = Math.PI * 0.5\n    coinMesh.castShadow = false\n    coinMesh.receiveShadow = false\n    \n*/\n    this.scene.add(coinMesh)\n\n    coinMesh.material = mat\n    this.coins = coinMesh\n\n    let i = 0\n    const offset = (amount - 1) / 2\n\n    for (let x = 0; x < amount; x++) {\n      const stackY = Math.random() * 20\n      for (let y = 0; y < stackY; y++) {\n        for (let z = 0; z < amount; z++) {\n          dummy.position.x = (offset - x) * 0.7 + (z % 2)\n          dummy.position.y = -(offset - y) * 0.07 - 1\n          dummy.position.z = (offset - z) * 0.6\n\n          //dummy.rotation.x = time + offset * z * 0.1\n          dummy.rotation.y = Math.pow(y / stackY, 2) * Math.random() * 3\n          //dummy.rotation.z = time + offset * z * 0.1\n\n          dummy.updateMatrix()\n\n          this.coins.setMatrixAt(i++, dummy.matrix)\n        }\n      }\n    }\n  }\n\n  private gameLoop = () => {\n    if (this.running) {\n      requestAnimationFrame(this.gameLoop)\n    }\n\n    let delta = this.clock.getDelta()\n\n    if (delta > 0.027) {\n      delta = 0.027\n    }\n\n    this.time += delta\n    this.update(this.time, delta)\n  }\n\n  update(time: number, delta: number): void {\n    if (this.coins) {\n      this.coins.rotation.y += 0.002\n      //this.camera.rotation.x = -Math.sin(((time * 0.1) % 13) * Math.PI * 0.15)\n      this.camera.position.y = Math.sin(((time * 0.1) % 13) * Math.PI * 1.25) + 2\n      //this.camera.position.z = Math.sin(((time * 0.1) % 13) * Math.PI * -0.75) + 6\n\n      //this.light.position.x = Math.sin(((time * 0.1) % 13) * Math.PI * 0.5) * -10\n\n      this.coins.instanceMatrix.needsUpdate = true\n    }\n    if (globalRenderer.usePostEffects) {\n      if (this.bloomListIsDirty) {\n        this.bloomListIsDirty = false\n      }\n\n      this.postEffectManager.render(time, delta)\n    } else {\n      this.renderer.render(this.scene, this.camera)\n    }\n\n    //this.rendererDebugInfo.update(delta)\n    this.renderer.info.reset()\n  }\n\n  resize = () => {\n    const size = sizeSystem.size\n    this.renderer.setSize(size.width, size.height)\n\n    this.postEffectManager.resize()\n\n    const cameraAsPerspectiveType = this.camera as PerspectiveCamera\n    cameraAsPerspectiveType.aspect = size.width / size.height\n    cameraAsPerspectiveType.updateProjectionMatrix()\n  }\n}\n","\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\nimport globalRenderer from '@/shared/misc/global-renderer'\nimport InstancedCoins from './instanced-coins'\n\nlet experiment\n\n@Component\nexport default class ExperimentWrapper extends Vue {\n  mounted(): void {\n    //move global renderer to this view\n    if (this.$refs.threeTargetContainer) {\n      ;(this.$refs.threeTargetContainer as HTMLElement).appendChild(globalRenderer.el)\n    }\n\n    experiment = new InstancedCoins()\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExperimentWrapper.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExperimentWrapper.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ExperimentWrapper.vue?vue&type=template&id=ac450e50&scoped=true&\"\nimport script from \"./ExperimentWrapper.vue?vue&type=script&lang=ts&\"\nexport * from \"./ExperimentWrapper.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ExperimentWrapper.vue?vue&type=style&index=0&id=ac450e50&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ac450e50\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator'\nimport ExperimentWrapper from './components/ExperimentWrapper.vue'\n\n@Component({\n  components: {\n    ExperimentWrapper\n  }\n})\nexport default class App extends Vue {}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--15-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--15-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--15-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--15-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=497efe58&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport assetsSystem from './shared/assets-system'\nimport sizeSystem from './shared/size-system'\nimport debug from 'debug'\nimport soundMap from './shared/sounds.json'\nimport soundSystem from './shared/sound-system'\ndebug.disable()\n\nVue.config.productionTip = false\n\nconst init = async () => {\n  await sizeSystem.init()\n  await assetsSystem.init()\n  await soundSystem.registerSoundMap('vault', soundMap)\n  //await tweakpaneManager.init()\n  //await debugSystem.init()\n  //touchSystem.mount()\n\n  new Vue({\n    el: '#app',\n    render: h => h(App)\n  })\n}\n\ninit()\n"],"sourceRoot":""}